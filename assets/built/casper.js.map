{"version":3,"sources":["jquery.fitvids.js","fancybox_helper.js","gallery-card.js","infinite-scroll.js","pig.js","prism.js","sticky-nav-title.js"],"names":["$","fn","fitVids","options","settings","customSelector","ignore","document","getElementById","head","getElementsByTagName","div","createElement","innerHTML","appendChild","childNodes","extend","this","each","selectors","push","ignoreList","$allVideos","find","join","not","$this","parents","length","tagName","toLowerCase","parent","css","isNaN","attr","aspectRatio","parseInt","height","width","videoName","_count","wrap","removeAttr","window","jQuery","Zepto","i","elem","console","log","el","gallery","wrapper","src","insertBefore","append","wrapImage","addEventListener","querySelectorAll","forEach","image","container","closest","ratio","attributes","value","style","flex","nextElement","querySelector","feedElement","buffer","ticking","loading","lastScrollY","scrollY","lastWindowHeight","innerHeight","lastDocumentHeight","documentElement","scrollHeight","onScroll","passive","onResize","requestTick","onPageLoad","status","removeEventListener","response","item","importNode","resNextElement","href","onUpdate","xhr","XMLHttpRequest","responseType","open","send","requestAnimationFrame","global","callbacks","running","optimizedResize","add","callback","resize","disable","reEnable","runCallbacks","setTimeout","Pig","imageData","inRAF","isTransitioning","minAspectRatioRequiresTransition","minAspectRatio","latestYOffset","lastWindowWidth","innerWidth","scrollDirection","visibleImages","containerId","classPrefix","figureTagName","spaceBetweenImages","transitionSpeed","primaryImageBufferHeight","secondaryImageBufferHeight","thumbnailSize","urlForSize","filename","size","getMinAspectRatio","getImageSize","obj1","obj2","hasOwnProperty","_extend","error","images","_parseImageData","type","styleSheet","cssText","createTextNode","_injectStyle","ProgressiveImage","singleImageData","index","pig","existsOnPage","classNames","figure","thumbnail","loaded","prototype","_getTransitionTimeout","_getTransitionString","_recomputeMinAspectRatio","oldMinAspectRatio","progressiveImages","progressiveImage","bind","_computeLayout","wrapperWidth","clientWidth","row","translateX","translateY","rowAspectRatio","transition","call","parseFloat","Math","max","rowHeight","img","imageWidth","totalHeight","_doLayout","bufferTop","bufferBottom","containerOffset","offsetTop","offsetParent","_getOffsetTop","windowHeight","minTranslateYPlusHeight","maxTranslateY","hide","load","_getOnScroll","_this","newYOffset","pageYOffset","previousYOffset","enable","_updateStyles","getElement","Image","className","onload","fullImage","removeChild","element","setAttribute","transform","define","amd","module","exports","_self","WorkerGlobalScope","self","Prism","e","t","n","manual","disableWorkerMessageHandler","util","encode","r","content","alias","map","replace","Object","toString","match","objId","__id","defineProperty","clone","a","languages","l","arguments","o","s","DFS","plugins","highlightAll","highlightAllUnder","selector","hooks","run","elements","highlightElement","test","parentNode","nodeName","g","language","grammar","code","textContent","Worker","u","onmessage","highlightedCode","data","postMessage","JSON","stringify","immediateClose","highlight","tokenize","matchGrammar","Token","c","h","f","inside","d","lookbehind","m","greedy","p","y","pattern","v","RegExp","source","b","k","w","lastIndex","P","_","exec","A","j","x","O","N","slice","S","C","M","E","Array","splice","apply","rest","all","tag","classes","keys","parse","close","currentScript","pop","hasAttribute","readyState","markup","comment","prolog","doctype","cdata","punctuation","namespace","attr-value","attr-name","entity","title","xml","html","mathml","svg","atrule","rule","url","string","property","important","function","style-attr","clike","class-name","keyword","boolean","number","operator","javascript","regex","function-variable","template-string","interpolation","interpolation-punctuation","script","js","macro","directive","constant","asm6502","opcode","hexnumber","binarynumber","decimalnumber","register","aspnet","page-directive tag","directive tag","csharp","asp comment","asp script","variable","bash","shebang","batch","label","command","parameter","brainfuck","pointer","increment","decrement","branching","cpp","raw-string","generic-method","preprocessor","ruby","delimiter","symbol","builtin","_django_template","django","jinja2","docker","dockerfile","gherkin","pystring","feature","scenario","table-body","outline","td","table-head","th","git","deleted","inserted","coord","commit_sha1","go","groovy","spock-block","annotation","expression","haml","multiline-comment","multiline-code","filter","filter-name","handlebars","block","brackets","handlebars-comment","tokenStack","backupCode","indexOf","haskell","char","import_statement","hvariable","http","request-line","response-status","header-name","httpLanguages","application/json","application/xml","text/xml","text/html","contentType","java","json","null","jsonp","kotlin","equation-command","latex","equation","headline","less","mixin-usage","lua","makefile","markdown","blockquote","hr","list","url-reference","bold","italic","nginx","perl","filehandle","vstring","php","shell-comment","package","powershell","properties","protobuf","primitive","puppet","heredoc","extended-regex","double-quoted","datatype","short-variable","python","triple-quoted-string","jsx","spread","typescript","ts","rust","attribute","macro-rules","closure-params","sass","atrule-line","variable-line","property-line","scss","placeholder","statement","scheme","sql","twig","ld","rd","other","tsx","vhdl","vhdl-vectors","quoted-function","vim","yaml","scalar","key","datetime","getAttribute","split","getComputedStyle","lineHeight","lineNumbers","getLine","top","offsetHeight","location","hash","lastIndexOf","scrollIntoView","fontSize","padding","border","body","clearTimeout","display","getBoundingClientRect","children","currentStyle","counterReset","classList","contains","autolinker","processGrammar","url-link","decodeURIComponent","removeAttribute","outerHTML","defaults","charCodeAt","assign","setDefaults","normalize","toUpperCase","leftTrim","rightTrim","tabsToSpaces","spacesToTabs","removeTrailing","removeInitialLineFeed","removeIndent","sort","indent","breakLines","NormalizeWhitespace","remove-trailing","remove-indent","left-trim","right-trim","nodeValue","KeepMarkup","Casper","stickyNavTitle","nav","navSelector","titleSelector","update","activeClass","remove"],"mappings":"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","file":"casper.js","sourcesContent":["/*jshint browser:true */\n/*!\n* FitVids 1.3\n*\n*\n* Copyright 2017, Chris Coyier + Dave Rupert + Ghost Foundation\n* This is an unofficial release, ported by John O'Nolan\n* Credit to Thierry Koblentz - http://www.alistapart.com/articles/creating-intrinsic-ratios-for-video/\n* Released under the MIT license\n*\n*/\n\n;(function( $ ){\n\n  'use strict';\n\n  $.fn.fitVids = function( options ) {\n    var settings = {\n      customSelector: null,\n      ignore: null\n    };\n\n    if(!document.getElementById('fit-vids-style')) {\n      // appendStyles: https://github.com/toddmotto/fluidvids/blob/master/dist/fluidvids.js\n      var head = document.head || document.getElementsByTagName('head')[0];\n      var css = '.fluid-width-video-container{flex-grow: 1;width:100%;}.fluid-width-video-wrapper{width:100%;position:relative;padding:0;}.fluid-width-video-wrapper iframe,.fluid-width-video-wrapper object,.fluid-width-video-wrapper embed {position:absolute;top:0;left:0;width:100%;height:100%;}';\n      var div = document.createElement(\"div\");\n      div.innerHTML = '<p>x</p><style id=\"fit-vids-style\">' + css + '</style>';\n      head.appendChild(div.childNodes[1]);\n    }\n\n    if ( options ) {\n      $.extend( settings, options );\n    }\n\n    return this.each(function(){\n      var selectors = [\n        'iframe[src*=\"player.vimeo.com\"]',\n        'iframe[src*=\"youtube.com\"]',\n        'iframe[src*=\"youtube-nocookie.com\"]',\n        'iframe[src*=\"kickstarter.com\"][src*=\"video.html\"]',\n        'object',\n        'embed'\n      ];\n\n      if (settings.customSelector) {\n        selectors.push(settings.customSelector);\n      }\n\n      var ignoreList = '.fitvidsignore';\n\n      if(settings.ignore) {\n        ignoreList = ignoreList + ', ' + settings.ignore;\n      }\n\n      var $allVideos = $(this).find(selectors.join(','));\n      $allVideos = $allVideos.not('object object'); // SwfObj conflict patch\n      $allVideos = $allVideos.not(ignoreList); // Disable FitVids on this video.\n\n      $allVideos.each(function(){\n        var $this = $(this);\n        if($this.parents(ignoreList).length > 0) {\n          return; // Disable FitVids on this video.\n        }\n        if (this.tagName.toLowerCase() === 'embed' && $this.parent('object').length || $this.parent('.fluid-width-video-wrapper').length) { return; }\n        if ((!$this.css('height') && !$this.css('width')) && (isNaN($this.attr('height')) || isNaN($this.attr('width'))))\n        {\n          $this.attr('height', 9);\n          $this.attr('width', 16);\n        }\n        var height = ( this.tagName.toLowerCase() === 'object' || ($this.attr('height') && !isNaN(parseInt($this.attr('height'), 10))) ) ? parseInt($this.attr('height'), 10) : $this.height(),\n            width = !isNaN(parseInt($this.attr('width'), 10)) ? parseInt($this.attr('width'), 10) : $this.width(),\n            aspectRatio = height / width;\n        if(!$this.attr('name')){\n          var videoName = 'fitvid' + $.fn.fitVids._count;\n          $this.attr('name', videoName);\n          $.fn.fitVids._count++;\n        }\n        $this.wrap('<div class=\"fluid-width-video-container\"><div class=\"fluid-width-video-wrapper\"></div></div>').parent('.fluid-width-video-wrapper').css('padding-top', (aspectRatio * 100)+'%');\n        $this.removeAttr('height').removeAttr('width');\n      });\n    });\n  };\n\n  // Internal counter for unique video names.\n  $.fn.fitVids._count = 0;\n\n// Works with either jQuery or Zepto\n})( window.jQuery || window.Zepto );\n","/**\n * Helper to turn the ghost gallery card into a fancybox gallery with expanding images\n */\n(function($) {\n    function wrapImage(el, gallery) {\n        wrapper = document.createElement('a');\n        $(wrapper).attr('href', el.src);\n        $(wrapper).attr('data-fancybox', gallery);\n        $(wrapper).insertBefore($(el));\n        $(wrapper).append($(el))\n    }\n\n    $(\".kg-gallery-image img\").each(function(i, elem) {\n        console.log(elem);\n        wrapImage(elem, \"gallery\");\n    });\n})($);\n","/* eslint-env browser */\n\n/**\n * Gallery card support\n * Used on any individual post/page\n *\n * Detects when a gallery card has been used and applies sizing to make sure\n * the display matches what is seen in the editor.\n */\n\n(function (window, document) {\n    var resizeImagesInGalleries = function resizeImagesInGalleries() {\n        var images = document.querySelectorAll('.kg-gallery-image img');\n        images.forEach(function (image) {\n            var container = image.closest('.kg-gallery-image');\n            var width = image.attributes.width.value;\n            var height = image.attributes.height.value;\n            var ratio = width / height;\n            container.style.flex = ratio + ' 1 0%';\n        });\n    };\n\n    document.addEventListener('DOMContentLoaded', resizeImagesInGalleries);\n})(window, document);\n","/* eslint-env browser */\n\n/**\n * Infinite Scroll\n * Used on all pages where there is a list of posts (homepage, tag index, etc).\n *\n * When the page is scrolled to 300px from the bottom, the next page of posts\n * is fetched by following the the <link rel=\"next\" href=\"...\"> that is output\n * by {{ghost_head}}.\n *\n * The individual post items are extracted from the fetched pages by looking for\n * a wrapper element with the class \"post-card\". Any found elements are appended\n * to the element with the class \"post-feed\" in the currently viewed page.\n */\n\n(function (window, document) {\n    // next link element\n    var nextElement = document.querySelector('link[rel=next]');\n    if (!nextElement) {\n        return;\n    }\n\n    // post feed element\n    var feedElement = document.querySelector('.post-feed');\n    if (!feedElement) {\n        return;\n    }\n\n    var buffer = 300;\n\n    var ticking = false;\n    var loading = false;\n\n    var lastScrollY = window.scrollY;\n    var lastWindowHeight = window.innerHeight;\n    var lastDocumentHeight = document.documentElement.scrollHeight;\n\n    function onPageLoad() {\n        if (this.status === 404) {\n            window.removeEventListener('scroll', onScroll);\n            window.removeEventListener('resize', onResize);\n            return;\n        }\n\n        // append contents\n        var postElements = this.response.querySelectorAll('.post-card');\n        postElements.forEach(function (item) {\n            // document.importNode is important, without it the item's owner\n            // document will be different which can break resizing of\n            // `object-fit: cover` images in Safari\n            feedElement.appendChild(document.importNode(item, true));\n        });\n\n        // set next link\n        var resNextElement = this.response.querySelector('link[rel=next]');\n        if (resNextElement) {\n            nextElement.href = resNextElement.href;\n        } else {\n            window.removeEventListener('scroll', onScroll);\n            window.removeEventListener('resize', onResize);\n        }\n\n        // sync status\n        lastDocumentHeight = document.documentElement.scrollHeight;\n        ticking = false;\n        loading = false;\n    }\n\n    function onUpdate() {\n        // return if already loading\n        if (loading) {\n            return;\n        }\n\n        // return if not scroll to the bottom\n        if (lastScrollY + lastWindowHeight <= lastDocumentHeight - buffer) {\n            ticking = false;\n            return;\n        }\n\n        loading = true;\n\n        var xhr = new window.XMLHttpRequest();\n        xhr.responseType = 'document';\n\n        xhr.addEventListener('load', onPageLoad);\n\n        xhr.open('GET', nextElement.href);\n        xhr.send(null);\n    }\n\n    function requestTick() {\n        ticking || window.requestAnimationFrame(onUpdate);\n        ticking = true;\n    }\n\n    function onScroll() {\n        lastScrollY = window.scrollY;\n        requestTick();\n    }\n\n    function onResize() {\n        lastWindowHeight = window.innerHeight;\n        lastDocumentHeight = document.documentElement.scrollHeight;\n        requestTick();\n    }\n\n    window.addEventListener('scroll', onScroll, {passive: true});\n    window.addEventListener('resize', onResize);\n\n    requestTick();\n})(window, document);\n","(function(global) {\n    'use strict';\n\n    /**\n     * This is a manager for our resize handlers. You can add a callback, disable\n     * all resize handlers, and re-enable handlers after they have been disabled.\n     *\n     * optimizedResize is adapted from Mozilla code:\n     * https://developer.mozilla.org/en-US/docs/Web/Events/resize\n     */\n    var optimizedResize = (function() {\n        var callbacks = [];\n        var running = false;\n\n        // fired on resize event\n        function resize() {\n            if (!running) {\n                running = true;\n                if (window.requestAnimationFrame) {\n                    window.requestAnimationFrame(runCallbacks);\n                } else {\n                    setTimeout(runCallbacks, 66);\n                }\n            }\n        }\n\n        // run the actual callbacks\n        function runCallbacks() {\n            callbacks.forEach(function(callback) {\n                callback();\n            });\n\n            running = false;\n        }\n\n        return {\n            /**\n             * Add a callback to be run on resize.\n             *\n             * @param {function} callback - the callback to run on resize.\n             */\n            add: function(callback) {\n                if (!callbacks.length) {\n                    window.addEventListener('resize', resize);\n                }\n\n                callbacks.push(callback);\n            },\n\n            /**\n             * Disables all resize handlers.\n             */\n            disable: function() {\n                window.removeEventListener('resize', resize);\n            },\n\n            /**\n             * Enables all resize handlers, if they were disabled.\n             */\n            reEnable: function() {\n                window.addEventListener('resize', resize);\n            },\n        };\n    }());\n\n    /**\n     * Inject CSS needed to make the grid work in the <head></head>.\n     *\n     * @param {string} classPrefix - the prefix associated with this library that\n     *                               should be prepended to classnames.\n     * @param {string} containerId - ID of the container for the images.\n     */\n    function _injectStyle(containerId, classPrefix, transitionSpeed) {\n\n        var css = (\n            '#' + containerId + ' {' +\n            '  position: relative;' +\n            '}' +\n            '.' + classPrefix + '-figure {' +\n            '  background-color: #D5D5D5;' +\n            '  overflow: hidden;' +\n            '  left: 0;' +\n            '  position: absolute;' +\n            '  top: 0;' +\n            '  margin: 0;' +\n            '}' +\n            '.' + classPrefix + '-figure img {' +\n            '  left: 0;' +\n            '  position: absolute;' +\n            '  top: 0;' +\n            '  height: 100%;' +\n            '  width: 100%;' +\n            '  opacity: 0;' +\n            '  transition: ' + (transitionSpeed / 1000) + 's ease opacity;' +\n            '  -webkit-transition: ' + (transitionSpeed / 1000) + 's ease opacity;' +\n            '}' +\n            '.' + classPrefix + '-figure img.' + classPrefix + '-thumbnail {' +\n            '  -webkit-filter: blur(30px);' +\n            '  filter: blur(30px);' +\n            '  left: auto;' +\n            '  position: relative;' +\n            '  width: auto;' +\n            '}' +\n            '.' + classPrefix + '-figure img.' + classPrefix + '-loaded {' +\n            '  opacity: 1;' +\n            '}'\n        );\n\n        var head = document.head || document.getElementsByTagName(\"head\")[0];\n        var style = document.createElement(\"style\");\n\n        style.type = \"text/css\";\n        if (style.styleSheet) {\n            style.styleSheet.cssText = css;\n        } else {\n            style.appendChild(document.createTextNode(css));\n        }\n\n        head.appendChild(style);\n    }\n\n    /**\n     * Extend obj1 with each key in obj2, overriding default values in obj1 with\n     * values in obj2\n     *\n     * @param {object} obj1 - The object to extend.\n     * @param {object} obj2 - The overrides to apply onto obj1.\n     */\n    function _extend(obj1, obj2) {\n        for (var i in obj2) {\n            if (obj2.hasOwnProperty(i)) {\n                obj1[i] = obj2[i];\n            }\n        }\n    }\n\n    /**\n     * Returns the distance from `elem` to the top of the page. This is done by\n     * walking up the node tree, getting the offsetTop of each parent node, until\n     * the top of the page.\n     *\n     * @param {object} elem - The element to compute the offset of.\n     **/\n    function _getOffsetTop(elem){\n        var offsetTop = 0;\n        do {\n            if (!isNaN(elem.offsetTop)){\n                offsetTop += elem.offsetTop;\n            }\n            elem = elem.offsetParent;\n        } while(elem);\n        return offsetTop;\n    }\n\n    /**\n     * Creates an instance of the progressive image grid, inserting boilerplate\n     * CSS and loading image data. Instantiating an instance of the Pig class\n     * does not cause any images to appear however. After instantiating, call the\n     * `enable()` function on the returned instance:\n     *\n     *   var pig = new Pig(imageData, opts);\n     *   pig.enable();\n     *\n     * @param {array} imageData - An array of metadata about each image to\n     *                            include in the grid.\n     * @param {string} imageData[0].filename - The filename of the image.\n     * @param {string} imageData[0].aspectRatio - The aspect ratio of the image.\n     * @param {object} options - An object containing overrides for the default\n     *                           options. See below for the full list of options\n     *                           and defaults.\n     *\n     * @returns {object} The Pig instance.\n     */\n    function Pig(imageData, options) {\n        // Global State\n        this.inRAF = false;\n        this.isTransitioning = false;\n        this.minAspectRatioRequiresTransition = false;\n        this.minAspectRatio = null;\n        this.latestYOffset = 0;\n        this.lastWindowWidth = window.innerWidth;\n        this.scrollDirection = 'down';\n\n        // List of images that are loading or completely loaded on screen.\n        this.visibleImages = [];\n\n        // These are the default settings, which may be overridden.\n        this.settings = {\n\n            /**\n             * Type: string\n             * Default: 'pig'\n             * Description: The class name of the element inside of which images should\n             *   be loaded.\n             */\n            containerId: 'pig',\n\n            /**\n             * Type: string\n             * Default: 'pig'\n             * Description: The prefix associated with this library that should be\n             *   prepended to class names within the grid.\n             */\n            classPrefix: 'pig',\n\n            /**\n             * Type: string\n             * Default: 'figure'\n             * Description: The tag name to use for each figure. The default setting is\n             *   to use a <figure></figure> tag.\n             */\n            figureTagName: 'figure',\n\n            /**\n             * Type: Number\n             * Default: 8\n             * Description: Size in pixels of the gap between images in the grid.\n             */\n            spaceBetweenImages: 8,\n\n            /**\n             * Type: Number\n             * Default: 500\n             * Description: Transition speed in milliseconds\n             */\n            transitionSpeed: 500,\n\n            /**\n             * Type: Number\n             * Default: 3000\n             * Description: Height in pixels of images to preload in the direction\n             *   that the user is scrolling. For example, in the default case, if the\n             *   user is scrolling down, 1000px worth of images will be loaded below\n             *   the viewport.\n             */\n            primaryImageBufferHeight: 1000,\n\n            /**\n             * Type: Number\n             * Default: 100\n             * Description: Height in pixels of images to preload in the direction\n             *   that the user is NOT scrolling. For example, in the default case, if\n             *   the user is scrolling down, 300px worth of images will be loaded\n             *   above the viewport.  Images further up will be removed.\n             */\n            secondaryImageBufferHeight: 300,\n\n            /**\n             * Type: Number\n             * Default: 20\n             * Description: The height in pixels of the thumbnail that should be\n             *   loaded and blurred to give the effect that images are loading out of\n             *   focus and then coming into focus.\n             */\n            thumbnailSize: 20,\n\n            /**\n             * Get the URL for an image with the given filename & size.\n             *\n             * @param {string} filename - The filename of the image.\n             * @param {Number} size - The size (height in pixels) of the image.\n             *\n             * @returns {string} The URL of the image at the given size.\n             */\n            urlForSize: function(filename, size) {\n                return '/img/' + size + '/' + filename;\n            },\n\n            /**\n             * Get the minimum required aspect ratio for a valid row of images. The\n             * perfect rows are maintained by building up a row of images by adding\n             * together their aspect ratios (the aspect ratio when they are placed\n             * next to each other) until that aspect ratio exceeds the value returned\n             * by this function. Responsive reordering is achieved through changes\n             * to what this function returns at different values of the passed\n             * parameter `lastWindowWidth`.\n             *\n             * @param {Number} lastWindowWidth - The last computed width of the\n             *                                   browser window.\n             *\n             * @returns {Number} The minimum aspect ratio at this window width.\n             */\n            getMinAspectRatio: function(lastWindowWidth) {\n                if (lastWindowWidth <= 640)\n                    return 2;\n                else if (lastWindowWidth <= 1280)\n                    return 4;\n                else if (lastWindowWidth <= 1920)\n                    return 5;\n                return 6;\n            },\n\n            /**\n             * Get the image size (height in pixels) to use for this window width.\n             * Responsive resizing of images is achieved through changes to what this\n             * function returns at different values of the passed parameter\n             * `lastWindowWidth`.\n             *\n             * @param {Number} lastWindowWidth - The last computed width of the\n             *                                   browser window.\n             *\n             * @returns {Number} The size (height in pixels) of the images to load.\n             */\n            getImageSize: function(lastWindowWidth) {\n                if (lastWindowWidth <= 640)\n                    return 100;\n                else if (lastWindowWidth <= 1920)\n                    return 250;\n                return 500;\n            }\n        };\n\n        // We extend the default settings with the provided overrides.\n        _extend(this.settings, options || {});\n\n        // Find the container to load images into, if it exists.\n        this.container = document.getElementById(this.settings.containerId);\n        if (!this.container) {\n            console.error('Could not find element with ID ' + this.settings.containerId);\n        }\n\n        // Our global reference for images in the grid.  Note that not all of these\n        // images are necessarily in view or loaded.\n        this.images = this._parseImageData(imageData);\n\n        // Inject our boilerplate CSS.\n        _injectStyle(this.settings.containerId, this.settings.classPrefix, this.settings.transitionSpeed);\n\n        // Allows for chaining with `enable()`.\n        return this;\n    }\n\n    /**\n     * Because we may be transitioning a very large number of elements on a\n     * resize, and because we cannot reliably determine when all elements are\n     * done transitioning, we have to approximate the amount of time it will take\n     * for the browser to be expected to complete with a transition. This\n     * constant gives the scale factor to apply to the given transition time. For\n     * example, if transitionTimeoutScaleFactor is 1.5 and transition speed is\n     * given as 500ms, we will wait 750ms before assuming that we are actually\n     * done resizing.\n     *\n     * @returns {Number} Time in milliseconds before we can consider a resize to\n     *   have been completed.\n     */\n    Pig.prototype._getTransitionTimeout = function() {\n        var transitionTimeoutScaleFactor = 1.5;\n        return this.settings.transitionSpeed * transitionTimeoutScaleFactor;\n    };\n\n    /**\n     * Gives the CSS property string to set for the transition value, depending\n     * on whether or not we are transitioning.\n     *\n     * @returns {string} a value for the `transition` CSS property.\n     */\n    Pig.prototype._getTransitionString = function() {\n        if (this.isTransitioning) {\n            return (this.settings.transitionSpeed / 1000) + 's transform ease';\n        }\n\n        return 'none';\n    };\n\n    /**\n     * Computes the current value for `this.minAspectRatio`, using the\n     * `getMinAspectRatio` function defined in the settings. Then,\n     * `this.minAspectRatioRequiresTransition` will be set, depending on whether\n     * or not the value of this.minAspectRatio has changed.\n     */\n    Pig.prototype._recomputeMinAspectRatio = function() {\n        var oldMinAspectRatio = this.minAspectRatio;\n        this.minAspectRatio = this.settings.getMinAspectRatio(this.lastWindowWidth);\n\n        if (oldMinAspectRatio !== null && oldMinAspectRatio !== this.minAspectRatio)\n            this.minAspectRatioRequiresTransition = true;\n        else\n            this.minAspectRatioRequiresTransition = false;\n    };\n\n    /**\n     * Creates new instances of the ProgressiveImage class for each of the images\n     * defined in `imageData`.\n     *\n     * @param {array} imageData - An array of metadata about each image to\n     *                            include in the grid.\n     * @param {string} imageData[0].filename - The filename of the image.\n     * @param {string} imageData[0].aspectRatio - The aspect ratio of the image.\n     *\n     * @returns {Array[ProgressiveImage]} - An array of ProgressiveImage\n     *                                      instances that we created.\n     */\n    Pig.prototype._parseImageData = function(imageData) {\n        var progressiveImages = [];\n\n        imageData.forEach(function(image, index) {\n            var progressiveImage = new ProgressiveImage(image, index, this);\n            progressiveImages.push(progressiveImage);\n        }.bind(this));\n\n        return progressiveImages;\n    };\n\n    /**\n     * This computes the layout of the entire grid, setting the height, width,\n     * translateX, translateY, and transtion values for each ProgessiveImage in\n     * `this.images`. These styles are set on the ProgressiveImage.style property,\n     * but are not set on the DOM.\n     *\n     * This separation of concerns (computing layout and DOM manipulation) is\n     * paramount to the performance of the PIG. While we need to manipulate the\n     * DOM every time we scroll (adding or remove images, etc.), we only need to\n     * compute the layout of the PIG on load and on resize. Therefore, this\n     * function will compute the entire grid layout but will not manipulate the\n     * DOM at all.\n     *\n     * All DOM manipulation occurs in `_doLayout`.\n     */\n    Pig.prototype._computeLayout = function() {\n        // Constants\n        var wrapperWidth = parseInt(this.container.clientWidth);\n\n        // State\n        var row = [];           // The list of images in the current row.\n        var translateX = 0;     // The current translateX value that we are at\n        var translateY = 0;     // The current translateY value that we are at\n        var rowAspectRatio = 0; // The aspect ratio of the row we are building\n\n        // Compute the minimum aspect ratio that should be applied to the rows.\n        this._recomputeMinAspectRatio();\n\n        // If we are not currently transitioning, and our minAspectRatio has just\n        // changed, then we mark isTransitioning true. If this is the case, then\n        // `this._getTransitionString()` will ensure that each image has a value\n        // like \"0.5s ease all\". This will cause images to animate as they change\n        // position. (They need to change position because the minAspectRatio has\n        // changed.) Once we determine that the transtion is probably over (using\n        // `this._getTransitionTimeout`) we unset `this.isTransitioning`, so that\n        // future calls to `_computeLayout` will set \"transition: none\".\n        if (!this.isTransitioning && this.minAspectRatioRequiresTransition) {\n            this.isTransitioning = true;\n            setTimeout(function() {\n                this.isTransitioning = false;\n            }, this._getTransitionTimeout());\n        }\n\n        // Get the valid-CSS transition string.\n        var transition = this._getTransitionString();\n\n        // Loop through all our images, building them up into rows and computing\n        // the working rowAspectRatio.\n        [].forEach.call(this.images, function(image, index) {\n            rowAspectRatio += parseFloat(image.aspectRatio);\n            row.push(image);\n\n            // When the rowAspectRatio exceeeds the minimum acceptable aspect ratio,\n            // or when we're out of images, we say that we have all the images we\n            // need for this row, and compute the style values for each of these\n            // images.\n            if (rowAspectRatio >= this.minAspectRatio || index + 1 === this.images.length) {\n\n                // Make sure that the last row also has a reasonable height\n                rowAspectRatio = Math.max(rowAspectRatio, this.minAspectRatio);\n\n                // Compute this row's height.\n                var totalDesiredWidthOfImages = wrapperWidth - this.settings.spaceBetweenImages * (row.length - 1);\n                var rowHeight = totalDesiredWidthOfImages / rowAspectRatio;\n\n                // For each image in the row, compute the width, height, translateX,\n                // and translateY values, and set them (and the transition value we\n                // found above) on each image.\n                //\n                // NOTE: This does not manipulate the DOM, rather it just sets the\n                //       style values on the ProgressiveImage instance. The DOM nodes\n                //       will be updated in _doLayout.\n                row.forEach(function(img) {\n\n                    var imageWidth = rowHeight * img.aspectRatio;\n\n                    // This is NOT DOM manipulation.\n                    img.style = {\n                        width: parseInt(imageWidth),\n                        height: parseInt(rowHeight),\n                        translateX: translateX,\n                        translateY: translateY,\n                        transition: transition,\n                    };\n\n                    // The next image is this.settings.spaceBetweenImages pixels to the\n                    // right of this image.\n                    translateX += imageWidth + this.settings.spaceBetweenImages;\n\n                }.bind(this));\n\n                // Reset our state variables for next row.\n                row = [];\n                rowAspectRatio = 0;\n                translateY += parseInt(rowHeight) + this.settings.spaceBetweenImages;\n                translateX = 0;\n            }\n        }.bind(this));\n\n        // No space below the last image\n        this.totalHeight = translateY - this.settings.spaceBetweenImages;\n    };\n\n\n    /**\n     * Update the DOM to reflect the style values of each image in the PIG,\n     * adding or removing images appropriately.\n     *\n     * PIG ensures that there are not too many images loaded into the DOM at once\n     * by maintaining a buffer region around the viewport in which images are\n     * allowed, removing all images below and above. Because all of our layout\n     * is computed using CSS transforms, removing an image above the buffer will\n     * not cause the gird to reshuffle.\n     *\n     * The primary buffer is the buffer in the direction of the user's scrolling.\n     * (Below if they are scrolling down, above if they are scrolling up.) The\n     * size of this buffer determines the experience of scrolling down the page.\n     *\n     * The secondary buffer is the buffer in the opposite direction of the user's\n     * scrolling.  The size of this buffer determines the experience of changing\n     * scroll directions. (Too small, and we have to reload a ton of images above\n     * the viewport if the user changes scroll directions.)\n     *\n     * While the entire grid has been computed, only images within the viewport,\n     * the primary buffer, and the secondary buffer will exist in the DOM.\n     *\n     *\n     *             Illustration: the primary and secondary buffers\n     *\n     *\n     * +---------------------------+\n     * |                           |\n     * |                           |\n     * |                           |\n     * |                           |\n     * + - - - - - - - - - - - - - +                   -------\n     * |                           |                      A\n     * |     Secondary Buffer      |   this.setting.secondaryImageBufferHeight\n     * |                           |                      V\n     * +---------------------------+                   -------\n     * |                           |                      A\n     * |                           |                      |\n     * |                           |                      |\n     * |        Viewport           |              window.innerHeight\n     * |                           |                      |\n     * |                           |                      |\n     * |                           |                      V\n     * +---------------------------+                   -------\n     * |                           |                      A\n     * |                           |                      |\n     * |                           |                      |\n     * |                           |                      |\n     * |      Primary Buffer       |    this.settings.primaryImageBufferHeight\n     * |                           |                      |\n     * |                           |                      |\n     * |                           |                      |\n     * |                           |                      V\n     * + - - - - - - - - - - - - - +                   -------\n     * |                           |\n     * |    (Scroll direction)     |\n     * |            |              |\n     * |            |              |\n     * |            V              |\n     * |                           |\n     *\n     */\n    Pig.prototype._doLayout = function() {\n\n        // Set the container height\n        this.container.style.height = this.totalHeight + 'px';\n\n        // Get the top and bottom buffers heights.\n        var bufferTop =\n            (this.scrollDirection === 'up') ?\n                this.settings.primaryImageBufferHeight :\n                this.settings.secondaryImageBufferHeight;\n        var bufferBottom =\n            (this.scrollDirection === 'down') ?\n                this.settings.secondaryImageBufferHeight :\n                this.settings.primaryImageBufferHeight;\n\n        // Now we compute the location of the top and bottom buffers:\n        var containerOffset = _getOffsetTop(this.container);\n        var windowHeight = window.innerHeight;\n\n        // This is the top of the top buffer. If the bottom of an image is above\n        // this line, it will be removed.\n        var minTranslateYPlusHeight = this.latestYOffset - containerOffset - bufferTop;\n\n        // This is the bottom of the bottom buffer.  If the top of an image is\n        // below this line, it will be removed.\n        var maxTranslateY = this.latestYOffset - containerOffset + windowHeight + bufferBottom;\n\n        // Here, we loop over every image, determine if it is inside our buffers or\n        // no, and either insert it or remove it appropriately.\n        this.images.forEach(function(image) {\n\n            if (image.style.translateY + image.style.height < minTranslateYPlusHeight ||\n                image.style.translateY > maxTranslateY) {\n                // Hide Image\n                image.hide();\n            } else {\n                // Load Image\n                image.load();\n            }\n        }.bind(this));\n    };\n\n    /**\n     * Create our onScroll handler and return it.\n     *\n     * @returns {function} Our optimized onScroll handler.\n     */\n    Pig.prototype._getOnScroll = function() {\n        var _this = this;\n\n        /**\n         * This function is called on scroll. It computes variables about the page\n         * position and scroll direction, and then calls a _doLayout guarded by a\n         * window.requestAnimationFrame.\n         *\n         * We use the boolean variable _this.inRAF to ensure that we don't overload\n         * the number of layouts we perform by starting another layout while we are\n         * in the middle of doing one.\n         *\n         * @returns {function} The onScroll handler that we should attach.\n         */\n        var onScroll = function() {\n            // Compute the scroll direction using the latestYOffset and the\n            // previousYOffset\n            var newYOffset = window.pageYOffset;\n            _this.previousYOffset = _this.latestYOffset || newYOffset;\n            _this.latestYOffset = newYOffset;\n            _this.scrollDirection = (_this.latestYOffset > _this.previousYOffset) ? 'down' : 'up';\n\n            // Call _this.doLayout, guarded by window.requestAnimationFrame\n            if (!_this.inRAF) {\n                _this.inRAF = true;\n                window.requestAnimationFrame(function() {\n                    _this._doLayout();\n                    _this.inRAF = false;\n                });\n            }\n        };\n\n        return onScroll;\n    };\n\n    /**\n     * Enable scroll and resize handlers, and run a complete layout computation /\n     * application.\n     *\n     * @returns {object} The Pig instance, for easy chaining with the constructor.\n     */\n    Pig.prototype.enable = function() {\n        this.onScroll = this._getOnScroll();\n        window.addEventListener('scroll', this.onScroll);\n\n        this.onScroll();\n        this._computeLayout();\n        this._doLayout();\n\n        optimizedResize.add(function() {\n            this.lastWindowWidth = window.innerWidth;\n            this._computeLayout();\n            this._doLayout();\n        }.bind(this));\n\n        return this;\n    };\n\n    /**\n     * Remove all scroll and resize listeners.\n     *\n     * @returns {object} The Pig instance.\n     */\n    Pig.prototype.disable = function() {\n        window.removeEventListener('scroll', this.onScroll);\n        optimizedResize.disable();\n        return this;\n    };\n\n    /**\n     * This class manages a single image. It keeps track of the image's height,\n     * width, and position in the grid. An instance of this class is associated\n     * with a single image figure, which looks like this:\n     *\n     *   <figure class=\"pig-figure\" style=\"transform: ...\">\n     *     <img class=\"pig-thumbnail pig-loaded\" src=\"/path/to/thumbnail/image.jpg\" />\n     *     <img class=\"pig-loaded\" src=\"/path/to/500px/image.jpg\" />\n     *   </figure>\n     *\n     * However, this element may or may not actually exist in the DOM. The actual\n     * DOM element may loaded and unloaded depending on where it is with respect\n     * to the viewport. This class is responsible for managing the DOM elements,\n     * but does not include logic to determine _when_ the DOM elements should\n     * be removed.\n     *\n     * This class also manages the blur-into-focus load effect.  First, the\n     * <figure> element is inserted into the page. Then, a very small thumbnail\n     * is loaded, stretched out to the full size of the image.  This pixelated\n     * image is then blurred using CSS filter: blur(). Then, the full image is\n     * loaded, with opacity:0.  Once it has loaded, it is given the `pig-loaded`\n     * class, and its opacity is set to 1.  This creates an effect where there is\n     * first a blurred version of the image, and then it appears to come into\n     * focus.\n     *\n     * @param {array} singleImageData - An array of metadata about each image to\n     *                                  include in the grid.\n     * @param {string} singleImageData[0].filename - The filename of the image.\n     * @param {string} singleImageData[0].aspectRatio - The aspect ratio of the\n     *                                                  image.\n     */\n    function ProgressiveImage(singleImageData, index, pig) {\n\n        // Global State\n        this.existsOnPage = false; // True if the element exists on the page.\n\n        // Instance information\n        this.aspectRatio = singleImageData.aspectRatio;  // Aspect Ratio\n        this.filename = singleImageData.filename;  // Filename\n        this.index = index;  // The index in the list of images\n\n        // The Pig instance\n        this.pig = pig;\n\n        this.classNames = {\n            figure: pig.settings.classPrefix + '-figure',\n            thumbnail: pig.settings.classPrefix + '-thumbnail',\n            loaded: pig.settings.classPrefix + '-loaded',\n        };\n\n        return this;\n    }\n\n    /**\n     * Load the image element associated with this ProgressiveImage into the DOM.\n     *\n     * This function will append the figure into the DOM, create and insert the\n     * thumbnail, and create and insert the full image.\n     */\n    ProgressiveImage.prototype.load = function() {\n        // Create a new image element, and insert it into the DOM. It doesn't\n        // matter the order of the figure elements, because all positioning\n        // is done using transforms.\n        this.existsOnPage = true;\n        this._updateStyles();\n        this.pig.container.appendChild(this.getElement());\n\n        // We run the rest of the function in a 100ms setTimeout so that if the\n        // user is scrolling down the page very fast and hide() is called within\n        // 100ms of load(), the hide() function will set this.existsOnPage to false\n        // and we can exit.\n        setTimeout(function() {\n\n            // The image was hidden very quickly after being loaded, so don't bother\n            // loading it at all.\n            if (!this.existsOnPage) {\n                return;\n            }\n\n            // Show thumbnail\n            if (!this.thumbnail) {\n                this.thumbnail = new Image();\n                this.thumbnail.src = this.pig.settings.urlForSize(this.filename, this.pig.settings.thumbnailSize);\n                this.thumbnail.className = this.classNames.thumbnail;\n                this.thumbnail.onload = function() {\n\n                    // We have to make sure thumbnail still exists, we may have already been\n                    // deallocated if the user scrolls too fast.\n                    if (this.thumbnail) {\n                        this.thumbnail.className += ' ' + this.classNames.loaded;\n                    }\n                }.bind(this);\n\n                this.getElement().appendChild(this.thumbnail);\n            }\n\n            // Show full image\n            if (!this.fullImage) {\n                this.fullImage = new Image();\n                this.fullImage.src = this.pig.settings.urlForSize(this.filename, this.pig.settings.getImageSize(this.pig.lastWindowWidth));\n                this.fullImage.onload = function() {\n\n                    // We have to make sure fullImage still exists, we may have already been\n                    // deallocated if the user scrolls too fast.\n                    if (this.fullImage) {\n                        this.fullImage.className += ' ' + this.classNames.loaded;\n                    }\n                }.bind(this);\n\n                this.getElement().appendChild(this.fullImage);\n            }\n        }.bind(this), 100);\n    };\n\n    /**\n     * Removes the figure from the DOM, removes the thumbnail and full image, and\n     * deletes the this.thumbnail and this.fullImage properties off of the\n     * ProgressiveImage object.\n     */\n    ProgressiveImage.prototype.hide = function() {\n        // Remove the images from the element, so that if a user is scrolling super\n        // fast, we won't try to load every image we scroll past.\n        if (this.getElement()) {\n            if (this.thumbnail) {\n                this.thumbnail.src = '';\n                this.getElement().removeChild(this.thumbnail);\n                delete this.thumbnail;\n            }\n\n            if (this.fullImage) {\n                this.fullImage.src = '';\n                this.getElement().removeChild(this.fullImage);\n                delete this.fullImage;\n            }\n        }\n\n        // Remove the image from the DOM.\n        if (this.existsOnPage) {\n            this.pig.container.removeChild(this.getElement());\n        }\n\n        this.existsOnPage = false;\n\n    };\n\n    /**\n     * Get the DOM element associated with this ProgressiveImage. We default to\n     * using this.element, and we create it if it doesn't exist.\n     *\n     * @returns {HTMLElement} The DOM element associated with this instance.\n     */\n    ProgressiveImage.prototype.getElement = function() {\n        if (!this.element) {\n            // Changed this to allow for fancybox gallery\n            this.element = document.createElement(\"a\");\n            this.element.setAttribute(\"data-fancybox\", \"full-gallery\");\n            this.element.setAttribute(\"href\", this.pig.settings.urlForSize(this.filename, 'full'));\n            this.element.className = this.classNames.figure;\n            this._updateStyles();\n        }\n\n        return this.element;\n    };\n\n    /**\n     * Updates the style attribute to reflect this style property on this object.\n     */\n    ProgressiveImage.prototype._updateStyles = function() {\n        this.getElement().style.transition = this.style.transition;\n        this.getElement().style.width = this.style.width + 'px';\n        this.getElement().style.height = this.style.height + 'px';\n        this.getElement().style.transform = (\n            'translate3d(' + this.style.translateX + 'px,' +\n            this.style.translateY + 'px, 0)');\n    };\n\n    // Export Pig into the global scope.\n    if (typeof define === 'function' && define.amd) {\n        define(Pig);\n    } else if (typeof module !== 'undefined' && module.exports) {\n        module.exports = Pig;\n    } else {\n        global.Pig = Pig;\n    }\n\n}(this));\n","/* PrismJS 1.11.0\nhttp://prismjs.com/download.html?themes=prism-dark&languages=markup+css+clike+javascript+c+asm6502+aspnet+bash+batch+brainfuck+cpp+csharp+ruby+django+docker+gherkin+git+go+groovy+haml+handlebars+haskell+http+java+json+kotlin+latex+less+lua+makefile+markdown+nginx+perl+php+powershell+properties+protobuf+puppet+python+jsx+typescript+rust+sass+scss+scheme+sql+twig+tsx+vhdl+vim+yaml&plugins=line-highlight+line-numbers+autolinker+command-line+normalize-whitespace */\nvar _self=\"undefined\"!=typeof window?window:\"undefined\"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?self:{},Prism=function(){var e=/\\blang(?:uage)?-(\\w+)\\b/i,t=0,n=_self.Prism={manual:_self.Prism&&_self.Prism.manual,disableWorkerMessageHandler:_self.Prism&&_self.Prism.disableWorkerMessageHandler,util:{encode:function(e){return e instanceof r?new r(e.type,n.util.encode(e.content),e.alias):\"Array\"===n.util.type(e)?e.map(n.util.encode):e.replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/\\u00a0/g,\" \")},type:function(e){return Object.prototype.toString.call(e).match(/\\[object (\\w+)\\]/)[1]},objId:function(e){return e.__id||Object.defineProperty(e,\"__id\",{value:++t}),e.__id},clone:function(e){var t=n.util.type(e);switch(t){case\"Object\":var r={};for(var a in e)e.hasOwnProperty(a)&&(r[a]=n.util.clone(e[a]));return r;case\"Array\":return e.map(function(e){return n.util.clone(e)})}return e}},languages:{extend:function(e,t){var r=n.util.clone(n.languages[e]);for(var a in t)r[a]=t[a];return r},insertBefore:function(e,t,r,a){a=a||n.languages;var l=a[e];if(2==arguments.length){r=arguments[1];for(var i in r)r.hasOwnProperty(i)&&(l[i]=r[i]);return l}var o={};for(var s in l)if(l.hasOwnProperty(s)){if(s==t)for(var i in r)r.hasOwnProperty(i)&&(o[i]=r[i]);o[s]=l[s]}return n.languages.DFS(n.languages,function(t,n){n===a[e]&&t!=e&&(this[t]=o)}),a[e]=o},DFS:function(e,t,r,a){a=a||{};for(var l in e)e.hasOwnProperty(l)&&(t.call(e,l,e[l],r||l),\"Object\"!==n.util.type(e[l])||a[n.util.objId(e[l])]?\"Array\"!==n.util.type(e[l])||a[n.util.objId(e[l])]||(a[n.util.objId(e[l])]=!0,n.languages.DFS(e[l],t,l,a)):(a[n.util.objId(e[l])]=!0,n.languages.DFS(e[l],t,null,a)))}},plugins:{},highlightAll:function(e,t){n.highlightAllUnder(document,e,t)},highlightAllUnder:function(e,t,r){var a={callback:r,selector:'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'};n.hooks.run(\"before-highlightall\",a);for(var l,i=a.elements||e.querySelectorAll(a.selector),o=0;l=i[o++];)n.highlightElement(l,t===!0,a.callback)},highlightElement:function(t,r,a){for(var l,i,o=t;o&&!e.test(o.className);)o=o.parentNode;o&&(l=(o.className.match(e)||[,\"\"])[1].toLowerCase(),i=n.languages[l]),t.className=t.className.replace(e,\"\").replace(/\\s+/g,\" \")+\" language-\"+l,t.parentNode&&(o=t.parentNode,/pre/i.test(o.nodeName)&&(o.className=o.className.replace(e,\"\").replace(/\\s+/g,\" \")+\" language-\"+l));var s=t.textContent,g={element:t,language:l,grammar:i,code:s};if(n.hooks.run(\"before-sanity-check\",g),!g.code||!g.grammar)return g.code&&(n.hooks.run(\"before-highlight\",g),g.element.textContent=g.code,n.hooks.run(\"after-highlight\",g)),n.hooks.run(\"complete\",g),void 0;if(n.hooks.run(\"before-highlight\",g),r&&_self.Worker){var u=new Worker(n.filename);u.onmessage=function(e){g.highlightedCode=e.data,n.hooks.run(\"before-insert\",g),g.element.innerHTML=g.highlightedCode,a&&a.call(g.element),n.hooks.run(\"after-highlight\",g),n.hooks.run(\"complete\",g)},u.postMessage(JSON.stringify({language:g.language,code:g.code,immediateClose:!0}))}else g.highlightedCode=n.highlight(g.code,g.grammar,g.language),n.hooks.run(\"before-insert\",g),g.element.innerHTML=g.highlightedCode,a&&a.call(t),n.hooks.run(\"after-highlight\",g),n.hooks.run(\"complete\",g)},highlight:function(e,t,a){var l=n.tokenize(e,t);return r.stringify(n.util.encode(l),a)},matchGrammar:function(e,t,r,a,l,i,o){var s=n.Token;for(var g in r)if(r.hasOwnProperty(g)&&r[g]){if(g==o)return;var u=r[g];u=\"Array\"===n.util.type(u)?u:[u];for(var c=0;c<u.length;++c){var h=u[c],f=h.inside,d=!!h.lookbehind,m=!!h.greedy,p=0,y=h.alias;if(m&&!h.pattern.global){var v=h.pattern.toString().match(/[imuy]*$/)[0];h.pattern=RegExp(h.pattern.source,v+\"g\")}h=h.pattern||h;for(var b=a,k=l;b<t.length;k+=t[b].length,++b){var w=t[b];if(t.length>e.length)return;if(!(w instanceof s)){h.lastIndex=0;var _=h.exec(w),P=1;if(!_&&m&&b!=t.length-1){if(h.lastIndex=k,_=h.exec(e),!_)break;for(var A=_.index+(d?_[1].length:0),j=_.index+_[0].length,x=b,O=k,N=t.length;N>x&&(j>O||!t[x].type&&!t[x-1].greedy);++x)O+=t[x].length,A>=O&&(++b,k=O);if(t[b]instanceof s||t[x-1].greedy)continue;P=x-b,w=e.slice(k,O),_.index-=k}if(_){d&&(p=_[1].length);var A=_.index+p,_=_[0].slice(p),j=A+_.length,S=w.slice(0,A),C=w.slice(j),M=[b,P];S&&(++b,k+=S.length,M.push(S));var E=new s(g,f?n.tokenize(_,f):_,y,_,m);if(M.push(E),C&&M.push(C),Array.prototype.splice.apply(t,M),1!=P&&n.matchGrammar(e,t,r,b,k,!0,g),i)break}else if(i)break}}}}},tokenize:function(e,t){var r=[e],a=t.rest;if(a){for(var l in a)t[l]=a[l];delete t.rest}return n.matchGrammar(e,r,t,0,0,!1),r},hooks:{all:{},add:function(e,t){var r=n.hooks.all;r[e]=r[e]||[],r[e].push(t)},run:function(e,t){var r=n.hooks.all[e];if(r&&r.length)for(var a,l=0;a=r[l++];)a(t)}}},r=n.Token=function(e,t,n,r,a){this.type=e,this.content=t,this.alias=n,this.length=0|(r||\"\").length,this.greedy=!!a};if(r.stringify=function(e,t,a){if(\"string\"==typeof e)return e;if(\"Array\"===n.util.type(e))return e.map(function(n){return r.stringify(n,t,e)}).join(\"\");var l={type:e.type,content:r.stringify(e.content,t,a),tag:\"span\",classes:[\"token\",e.type],attributes:{},language:t,parent:a};if(e.alias){var i=\"Array\"===n.util.type(e.alias)?e.alias:[e.alias];Array.prototype.push.apply(l.classes,i)}n.hooks.run(\"wrap\",l);var o=Object.keys(l.attributes).map(function(e){return e+'=\"'+(l.attributes[e]||\"\").replace(/\"/g,\"&quot;\")+'\"'}).join(\" \");return\"<\"+l.tag+' class=\"'+l.classes.join(\" \")+'\"'+(o?\" \"+o:\"\")+\">\"+l.content+\"</\"+l.tag+\">\"},!_self.document)return _self.addEventListener?(n.disableWorkerMessageHandler||_self.addEventListener(\"message\",function(e){var t=JSON.parse(e.data),r=t.language,a=t.code,l=t.immediateClose;_self.postMessage(n.highlight(a,n.languages[r],r)),l&&_self.close()},!1),_self.Prism):_self.Prism;var a=document.currentScript||[].slice.call(document.getElementsByTagName(\"script\")).pop();return a&&(n.filename=a.src,n.manual||a.hasAttribute(\"data-manual\")||(\"loading\"!==document.readyState?window.requestAnimationFrame?window.requestAnimationFrame(n.highlightAll):window.setTimeout(n.highlightAll,16):document.addEventListener(\"DOMContentLoaded\",n.highlightAll))),_self.Prism}();\"undefined\"!=typeof module&&module.exports&&(module.exports=Prism),\"undefined\"!=typeof global&&(global.Prism=Prism);\nPrism.languages.markup={comment:/<!--[\\s\\S]*?-->/,prolog:/<\\?[\\s\\S]+?\\?>/,doctype:/<!DOCTYPE[\\s\\S]+?>/i,cdata:/<!\\[CDATA\\[[\\s\\S]*?]]>/i,tag:{pattern:/<\\/?(?!\\d)[^\\s>\\/=$<]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,inside:{tag:{pattern:/^<\\/?[^\\s>\\/]+/i,inside:{punctuation:/^<\\/?/,namespace:/^[^\\s>\\/:]+:/}},\"attr-value\":{pattern:/=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/i,inside:{punctuation:[/^=/,{pattern:/(^|[^\\\\])[\"']/,lookbehind:!0}]}},punctuation:/\\/?>/,\"attr-name\":{pattern:/[^\\s>\\/]+/,inside:{namespace:/^[^\\s>\\/:]+:/}}}},entity:/&#?[\\da-z]{1,8};/i},Prism.languages.markup.tag.inside[\"attr-value\"].inside.entity=Prism.languages.markup.entity,Prism.hooks.add(\"wrap\",function(a){\"entity\"===a.type&&(a.attributes.title=a.content.replace(/&amp;/,\"&\"))}),Prism.languages.xml=Prism.languages.markup,Prism.languages.html=Prism.languages.markup,Prism.languages.mathml=Prism.languages.markup,Prism.languages.svg=Prism.languages.markup;\nPrism.languages.css={comment:/\\/\\*[\\s\\S]*?\\*\\//,atrule:{pattern:/@[\\w-]+?.*?(?:;|(?=\\s*\\{))/i,inside:{rule:/@[\\w-]+/}},url:/url\\((?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|.*?)\\)/i,selector:/[^{}\\s][^{};]*?(?=\\s*\\{)/,string:{pattern:/(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},property:/[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,important:/\\B!important\\b/i,\"function\":/[-a-z0-9]+(?=\\()/i,punctuation:/[(){};:]/},Prism.languages.css.atrule.inside.rest=Prism.util.clone(Prism.languages.css),Prism.languages.markup&&(Prism.languages.insertBefore(\"markup\",\"tag\",{style:{pattern:/(<style[\\s\\S]*?>)[\\s\\S]*?(?=<\\/style>)/i,lookbehind:!0,inside:Prism.languages.css,alias:\"language-css\",greedy:!0}}),Prism.languages.insertBefore(\"inside\",\"attr-value\",{\"style-attr\":{pattern:/\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,inside:{\"attr-name\":{pattern:/^\\s*style/i,inside:Prism.languages.markup.tag.inside},punctuation:/^\\s*=\\s*['\"]|['\"]\\s*$/,\"attr-value\":{pattern:/.+/i,inside:Prism.languages.css}},alias:\"language-css\"}},Prism.languages.markup.tag));\nPrism.languages.clike={comment:[{pattern:/(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,lookbehind:!0},{pattern:/(^|[^\\\\:])\\/\\/.*/,lookbehind:!0}],string:{pattern:/([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},\"class-name\":{pattern:/((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\\\]/}},keyword:/\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\"boolean\":/\\b(?:true|false)\\b/,\"function\":/[a-z0-9_]+(?=\\()/i,number:/\\b-?(?:0x[\\da-f]+|\\d*\\.?\\d+(?:e[+-]?\\d+)?)\\b/i,operator:/--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,punctuation:/[{}[\\];(),.:]/};\nPrism.languages.javascript=Prism.languages.extend(\"clike\",{keyword:/\\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,number:/\\b-?(?:0[xX][\\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+|\\d*\\.?\\d+(?:[Ee][+-]?\\d+)?|NaN|Infinity)\\b/,\"function\":/[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*\\()/i,operator:/-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/}),Prism.languages.insertBefore(\"javascript\",\"keyword\",{regex:{pattern:/(^|[^\\/])\\/(?!\\/)(\\[[^\\]\\r\\n]+]|\\\\.|[^\\/\\\\\\[\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})]))/,lookbehind:!0,greedy:!0},\"function-variable\":{pattern:/[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)|[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/i,alias:\"function\"}}),Prism.languages.insertBefore(\"javascript\",\"string\",{\"template-string\":{pattern:/`(?:\\\\[\\s\\S]|[^\\\\`])*`/,greedy:!0,inside:{interpolation:{pattern:/\\$\\{[^}]+\\}/,inside:{\"interpolation-punctuation\":{pattern:/^\\$\\{|\\}$/,alias:\"punctuation\"},rest:Prism.languages.javascript}},string:/[\\s\\S]+/}}}),Prism.languages.markup&&Prism.languages.insertBefore(\"markup\",\"tag\",{script:{pattern:/(<script[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,lookbehind:!0,inside:Prism.languages.javascript,alias:\"language-javascript\",greedy:!0}}),Prism.languages.js=Prism.languages.javascript;\nPrism.languages.c=Prism.languages.extend(\"clike\",{keyword:/\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,operator:/-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/]/,number:/\\b-?(?:0x[\\da-f]+|\\d*\\.?\\d+(?:e[+-]?\\d+)?)[ful]*\\b/i}),Prism.languages.insertBefore(\"c\",\"string\",{macro:{pattern:/(^\\s*)#\\s*[a-z]+(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,lookbehind:!0,alias:\"property\",inside:{string:{pattern:/(#\\s*include\\s*)(?:<.+?>|(\"|')(?:\\\\?.)+?\\2)/,lookbehind:!0},directive:{pattern:/(#\\s*)\\b(?:define|defined|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\\b/,lookbehind:!0,alias:\"keyword\"}}},constant:/\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/}),delete Prism.languages.c[\"class-name\"],delete Prism.languages.c[\"boolean\"];\nPrism.languages.asm6502={comment:/;.*/,directive:{pattern:/\\.\\w+(?= )/,alias:\"keyword\"},string:/([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,opcode:{pattern:/\\b(?:adc|and|asl|bcc|bcs|beq|bit|bmi|bne|bpl|brk|bvc|bvs|clc|cld|cli|clv|cmp|cpx|cpy|dec|dex|dey|eor|inc|inx|iny|jmp|jsr|lda|ldx|ldy|lsr|nop|ora|pha|php|pla|plp|rol|ror|rti|rts|sbc|sec|sed|sei|sta|stx|sty|tax|tay|tsx|txa|txs|tya|ADC|AND|ASL|BCC|BCS|BEQ|BIT|BMI|BNE|BPL|BRK|BVC|BVS|CLC|CLD|CLI|CLV|CMP|CPX|CPY|DEC|DEX|DEY|EOR|INC|INX|INY|JMP|JSR|LDA|LDX|LDY|LSR|NOP|ORA|PHA|PHP|PLA|PLP|ROL|ROR|RTI|RTS|SBC|SEC|SED|SEI|STA|STX|STY|TAX|TAY|TSX|TXA|TXS|TYA)\\b/,alias:\"property\"},hexnumber:{pattern:/#?\\$[\\da-fA-F]{2,4}/,alias:\"string\"},binarynumber:{pattern:/#?%[01]+/,alias:\"string\"},decimalnumber:{pattern:/#?\\d+/,alias:\"string\"},register:{pattern:/\\b[xyaXYA]\\b/,alias:\"variable\"}};\nPrism.languages.aspnet=Prism.languages.extend(\"markup\",{\"page-directive tag\":{pattern:/<%\\s*@.*%>/i,inside:{\"page-directive tag\":/<%\\s*@\\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,rest:Prism.languages.markup.tag.inside}},\"directive tag\":{pattern:/<%.*%>/i,inside:{\"directive tag\":/<%\\s*?[$=%#:]{0,2}|%>/i,rest:Prism.languages.csharp}}}),Prism.languages.aspnet.tag.pattern=/<(?!%)\\/?[^\\s>\\/]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,Prism.languages.insertBefore(\"inside\",\"punctuation\",{\"directive tag\":Prism.languages.aspnet[\"directive tag\"]},Prism.languages.aspnet.tag.inside[\"attr-value\"]),Prism.languages.insertBefore(\"aspnet\",\"comment\",{\"asp comment\":/<%--[\\s\\S]*?--%>/}),Prism.languages.insertBefore(\"aspnet\",Prism.languages.javascript?\"script\":\"tag\",{\"asp script\":{pattern:/(<script(?=.*runat=['\"]?server['\"]?)[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,lookbehind:!0,inside:Prism.languages.csharp||{}}});\n!function(e){var t={variable:[{pattern:/\\$?\\(\\([\\s\\S]+?\\)\\)/,inside:{variable:[{pattern:/(^\\$\\(\\([\\s\\S]+)\\)\\)/,lookbehind:!0},/^\\$\\(\\(/],number:/\\b-?(?:0x[\\dA-Fa-f]+|\\d*\\.?\\d+(?:[Ee]-?\\d+)?)\\b/,operator:/--?|-=|\\+\\+?|\\+=|!=?|~|\\*\\*?|\\*=|\\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\\^=?|\\|\\|?|\\|=|\\?|:/,punctuation:/\\(\\(?|\\)\\)?|,|;/}},{pattern:/\\$\\([^)]+\\)|`[^`]+`/,inside:{variable:/^\\$\\(|^`|\\)$|`$/}},/\\$(?:[\\w#?*!@]+|\\{[^}]+\\})/i]};e.languages.bash={shebang:{pattern:/^#!\\s*\\/bin\\/bash|^#!\\s*\\/bin\\/sh/,alias:\"important\"},comment:{pattern:/(^|[^\"{\\\\])#.*/,lookbehind:!0},string:[{pattern:/((?:^|[^<])<<\\s*)[\"']?(\\w+?)[\"']?\\s*\\r?\\n(?:[\\s\\S])*?\\r?\\n\\2/,lookbehind:!0,greedy:!0,inside:t},{pattern:/([\"'])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,greedy:!0,inside:t}],variable:t.variable,\"function\":{pattern:/(^|[\\s;|&])(?:alias|apropos|apt-get|aptitude|aspell|awk|basename|bash|bc|bg|builtin|bzip2|cal|cat|cd|cfdisk|chgrp|chmod|chown|chroot|chkconfig|cksum|clear|cmp|comm|command|cp|cron|crontab|csplit|cut|date|dc|dd|ddrescue|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|enable|env|ethtool|eval|exec|expand|expect|export|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|getopts|git|grep|groupadd|groupdel|groupmod|groups|gzip|hash|head|help|hg|history|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|jobs|join|kill|killall|less|link|ln|locate|logname|logout|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|make|man|mkdir|mkfifo|mkisofs|mknod|more|most|mount|mtools|mtr|mv|mmv|nano|netstat|nice|nl|nohup|notify-send|npm|nslookup|open|op|passwd|paste|pathchk|ping|pkill|popd|pr|printcap|printenv|printf|ps|pushd|pv|pwd|quota|quotacheck|quotactl|ram|rar|rcp|read|readarray|readonly|reboot|rename|renice|remsync|rev|rm|rmdir|rsync|screen|scp|sdiff|sed|seq|service|sftp|shift|shopt|shutdown|sleep|slocate|sort|source|split|ssh|stat|strace|su|sudo|sum|suspend|sync|tail|tar|tee|test|time|timeout|times|touch|top|traceroute|trap|tr|tsort|tty|type|ulimit|umask|umount|unalias|uname|unexpand|uniq|units|unrar|unshar|uptime|useradd|userdel|usermod|users|uuencode|uudecode|v|vdir|vi|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yes|zip)(?=$|[\\s;|&])/,lookbehind:!0},keyword:{pattern:/(^|[\\s;|&])(?:let|:|\\.|if|then|else|elif|fi|for|break|continue|while|in|case|function|select|do|done|until|echo|exit|return|set|declare)(?=$|[\\s;|&])/,lookbehind:!0},\"boolean\":{pattern:/(^|[\\s;|&])(?:true|false)(?=$|[\\s;|&])/,lookbehind:!0},operator:/&&?|\\|\\|?|==?|!=?|<<<?|>>|<=?|>=?|=~/,punctuation:/\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];]/};var a=t.variable[1].inside;a[\"function\"]=e.languages.bash[\"function\"],a.keyword=e.languages.bash.keyword,a.boolean=e.languages.bash.boolean,a.operator=e.languages.bash.operator,a.punctuation=e.languages.bash.punctuation}(Prism);\n!function(e){var r=/%%?[~:\\w]+%?|!\\S+!/,t={pattern:/\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,alias:\"attr-name\",inside:{punctuation:/:/}},n=/\"[^\"]*\"/,i=/(?:\\b|-)\\d+\\b/;e.languages.batch={comment:[/^::.*/m,{pattern:/((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,lookbehind:!0}],label:{pattern:/^:.*/m,alias:\"property\"},command:[{pattern:/((?:^|[&(])[ \\t]*)for(?: ?\\/[a-z?](?:[ :](?:\"[^\"]*\"|\\S+))?)* \\S+ in \\([^)]+\\) do/im,lookbehind:!0,inside:{keyword:/^for\\b|\\b(?:in|do)\\b/i,string:n,parameter:t,variable:r,number:i,punctuation:/[()',]/}},{pattern:/((?:^|[&(])[ \\t]*)if(?: ?\\/[a-z?](?:[ :](?:\"[^\"]*\"|\\S+))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|\\S+)?(?:==| (?:equ|neq|lss|leq|gtr|geq) )(?:\"[^\"]*\"|\\S+))/im,lookbehind:!0,inside:{keyword:/^if\\b|\\b(?:not|cmdextversion|defined|errorlevel|exist)\\b/i,string:n,parameter:t,variable:r,number:i,operator:/\\^|==|\\b(?:equ|neq|lss|leq|gtr|geq)\\b/i}},{pattern:/((?:^|[&()])[ \\t]*)else\\b/im,lookbehind:!0,inside:{keyword:/^else\\b/i}},{pattern:/((?:^|[&(])[ \\t]*)set(?: ?\\/[a-z](?:[ :](?:\"[^\"]*\"|\\S+))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,lookbehind:!0,inside:{keyword:/^set\\b/i,string:n,parameter:t,variable:[r,/\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/],number:i,operator:/[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,punctuation:/[()',]/}},{pattern:/((?:^|[&(])[ \\t]*@?)\\w+\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,lookbehind:!0,inside:{keyword:/^\\w+\\b/i,string:n,parameter:t,label:{pattern:/(^\\s*):\\S+/m,lookbehind:!0,alias:\"property\"},variable:r,number:i,operator:/\\^/}}],operator:/[&@]/,punctuation:/[()']/}}(Prism);\nPrism.languages.brainfuck={pointer:{pattern:/<|>/,alias:\"keyword\"},increment:{pattern:/\\+/,alias:\"inserted\"},decrement:{pattern:/-/,alias:\"deleted\"},branching:{pattern:/\\[|\\]/,alias:\"important\"},operator:/[.,]/,comment:/\\S+/};\nPrism.languages.cpp=Prism.languages.extend(\"c\",{keyword:/\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/,\"boolean\":/\\b(?:true|false)\\b/,operator:/--?|\\+\\+?|!=?|<{1,2}=?|>{1,2}=?|->|:{1,2}|={1,2}|\\^|~|%|&{1,2}|\\|\\|?|\\?|\\*|\\/|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/}),Prism.languages.insertBefore(\"cpp\",\"keyword\",{\"class-name\":{pattern:/(class\\s+)\\w+/i,lookbehind:!0}}),Prism.languages.insertBefore(\"cpp\",\"string\",{\"raw-string\":{pattern:/R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,alias:\"string\",greedy:!0}});\nPrism.languages.csharp=Prism.languages.extend(\"clike\",{keyword:/\\b(abstract|as|async|await|base|bool|break|byte|case|catch|char|checked|class|const|continue|decimal|default|delegate|do|double|else|enum|event|explicit|extern|false|finally|fixed|float|for|foreach|goto|if|implicit|in|int|interface|internal|is|lock|long|namespace|new|null|object|operator|out|override|params|private|protected|public|readonly|ref|return|sbyte|sealed|short|sizeof|stackalloc|static|string|struct|switch|this|throw|true|try|typeof|uint|ulong|unchecked|unsafe|ushort|using|virtual|void|volatile|while|add|alias|ascending|async|await|descending|dynamic|from|get|global|group|into|join|let|orderby|partial|remove|select|set|value|var|where|yield)\\b/,string:[{pattern:/@(\"|')(?:\\1\\1|\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,greedy:!0},{pattern:/(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*?\\1/,greedy:!0}],number:/\\b-?(?:0x[\\da-f]+|\\d*\\.?\\d+f?)\\b/i}),Prism.languages.insertBefore(\"csharp\",\"keyword\",{\"generic-method\":{pattern:/[a-z0-9_]+\\s*<[^>\\r\\n]+?>\\s*(?=\\()/i,alias:\"function\",inside:{keyword:Prism.languages.csharp.keyword,punctuation:/[<>(),.:]/}},preprocessor:{pattern:/(^\\s*)#.*/m,lookbehind:!0,alias:\"property\",inside:{directive:{pattern:/(\\s*#)\\b(?:define|elif|else|endif|endregion|error|if|line|pragma|region|undef|warning)\\b/,lookbehind:!0,alias:\"keyword\"}}}});\n!function(e){e.languages.ruby=e.languages.extend(\"clike\",{comment:[/#(?!\\{[^\\r\\n]*?\\}).*/,/^=begin(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r))*?=end/m],keyword:/\\b(?:alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|false|for|if|in|module|new|next|nil|not|or|raise|redo|require|rescue|retry|return|self|super|then|throw|true|undef|unless|until|when|while|yield)\\b/});var n={pattern:/#\\{[^}]+\\}/,inside:{delimiter:{pattern:/^#\\{|\\}$/,alias:\"tag\"},rest:e.util.clone(e.languages.ruby)}};e.languages.insertBefore(\"ruby\",\"keyword\",{regex:[{pattern:/%r([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[gim]{0,3}/,greedy:!0,inside:{interpolation:n}},{pattern:/%r\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[gim]{0,3}/,greedy:!0,inside:{interpolation:n}},{pattern:/%r\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}[gim]{0,3}/,greedy:!0,inside:{interpolation:n}},{pattern:/%r\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\][gim]{0,3}/,greedy:!0,inside:{interpolation:n}},{pattern:/%r<(?:[^<>\\\\]|\\\\[\\s\\S])*>[gim]{0,3}/,greedy:!0,inside:{interpolation:n}},{pattern:/(^|[^\\/])\\/(?!\\/)(\\[.+?]|\\\\.|[^\\/\\\\\\r\\n])+\\/[gim]{0,3}(?=\\s*($|[\\r\\n,.;})]))/,lookbehind:!0,greedy:!0}],variable:/[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,symbol:/:[a-zA-Z_]\\w*(?:[?!]|\\b)/}),e.languages.insertBefore(\"ruby\",\"number\",{builtin:/\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\\b/,constant:/\\b[A-Z]\\w*(?:[?!]|\\b)/}),e.languages.ruby.string=[{pattern:/%[qQiIwWxs]?([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,greedy:!0,inside:{interpolation:n}},{pattern:/%[qQiIwWxs]?\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,greedy:!0,inside:{interpolation:n}},{pattern:/%[qQiIwWxs]?\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}/,greedy:!0,inside:{interpolation:n}},{pattern:/%[qQiIwWxs]?\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\]/,greedy:!0,inside:{interpolation:n}},{pattern:/%[qQiIwWxs]?<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,greedy:!0,inside:{interpolation:n}},{pattern:/(\"|')(?:#\\{[^}]+\\}|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0,inside:{interpolation:n}}]}(Prism);\nvar _django_template={property:{pattern:/(?:{{|{%)[\\s\\S]*?(?:%}|}})/g,greedy:!0,inside:{string:{pattern:/(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},keyword:/\\b(?:\\||load|verbatim|widthratio|ssi|firstof|for|url|ifchanged|csrf_token|lorem|ifnotequal|autoescape|now|templatetag|debug|cycle|ifequal|regroup|comment|filter|endfilter|if|spaceless|with|extends|block|include|else|empty|endif|endfor|as|endblock|endautoescape|endverbatim|trans|endtrans|[Tt]rue|[Ff]alse|[Nn]one|in|is|static|macro|endmacro|call|endcall|set|endset|raw|endraw)\\b/,operator:/[-+=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not)\\b/,\"function\":/\\b(?:_|abs|add|addslashes|attr|batch|callable|capfirst|capitalize|center|count|cut|d|date|default|default_if_none|defined|dictsort|dictsortreversed|divisibleby|e|equalto|escape|escaped|escapejs|even|filesizeformat|first|float|floatformat|force_escape|forceescape|format|get_digit|groupby|indent|int|iriencode|iterable|join|last|length|length_is|linebreaks|linebreaksbr|linenumbers|list|ljust|lower|make_list|map|mapping|number|odd|phone2numeric|pluralize|pprint|random|reject|rejectattr|removetags|replace|reverse|rjust|round|safe|safeseq|sameas|select|selectattr|sequence|slice|slugify|sort|string|stringformat|striptags|sum|time|timesince|timeuntil|title|trim|truncate|truncatechars|truncatechars_html|truncatewords|truncatewords_html|undefined|unordered_list|upper|urlencode|urlize|urlizetrunc|wordcount|wordwrap|xmlattr|yesno)\\b/,important:/\\b-?\\d+(?:\\.\\d+)?\\b/,variable:/\\b\\w+?\\b/,punctuation:/[[\\];(),.:]/}}};Prism.languages.django=Prism.languages.extend(\"markup\",{comment:/(?:<!--|{#)[\\s\\S]*?(?:#}|-->)/}),Prism.languages.django.tag.pattern=/<\\/?(?!\\d)[^\\s>\\/=$<]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^>=]+))?)*\\s*\\/?>/i,Prism.languages.insertBefore(\"django\",\"entity\",_django_template),Prism.languages.insertBefore(\"inside\",\"tag\",_django_template,Prism.languages.django.tag),Prism.languages.javascript&&(Prism.languages.insertBefore(\"inside\",\"string\",_django_template,Prism.languages.django.script),Prism.languages.django.script.inside.string.inside=_django_template),Prism.languages.css&&(Prism.languages.insertBefore(\"inside\",\"atrule\",{tag:_django_template.property},Prism.languages.django.style),Prism.languages.django.style.inside.string.inside=_django_template),Prism.languages.jinja2=Prism.languages.django;\nPrism.languages.docker={keyword:{pattern:/(^\\s*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\\s)/im,lookbehind:!0},string:/(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,comment:/#.*/,punctuation:/---|\\.\\.\\.|[:[\\]{}\\-,|>?]/},Prism.languages.dockerfile=Prism.languages.docker;\nPrism.languages.gherkin={pystring:{pattern:/(\"\"\"|''')[\\s\\S]+?\\1/,alias:\"string\"},comment:{pattern:/((?:^|\\r?\\n|\\r)[ \\t]*)#.*/,lookbehind:!0},tag:{pattern:/((?:^|\\r?\\n|\\r)[ \\t]*)@\\S*/,lookbehind:!0},feature:{pattern:/((?:^|\\r?\\n|\\r)[ \\t]*)(?:Ability|Ahoy matey!|Arwedd|Aspekt|Besigheid Behoefte|Business Need|Caracteristica|Característica|Egenskab|Egenskap|Eiginleiki|Feature|Fīča|Fitur|Fonctionnalité|Fonksyonalite|Funcionalidade|Funcionalitat|Functionalitate|Funcţionalitate|Funcționalitate|Functionaliteit|Fungsi|Funkcia|Funkcija|Funkcionalitāte|Funkcionalnost|Funkcja|Funksie|Funktionalität|Funktionalitéit|Funzionalità|Hwaet|Hwæt|Jellemző|Karakteristik|laH|Lastnost|Mak|Mogucnost|Mogućnost|Moznosti|Možnosti|OH HAI|Omadus|Ominaisuus|Osobina|Özellik|perbogh|poQbogh malja'|Potrzeba biznesowa|Požadavek|Požiadavka|Pretty much|Qap|Qu'meH 'ut|Savybė|Tính năng|Trajto|Vermoë|Vlastnosť|Właściwość|Značilnost|Δυνατότητα|Λειτουργία|Могућност|Мөмкинлек|Особина|Свойство|Үзенчәлеклелек|Функционал|Функционалност|Функция|Функціонал|תכונה|خاصية|خصوصیت|صلاحیت|کاروبار کی ضرورت|وِیژگی|रूप लेख|ਖਾਸੀਅਤ|ਨਕਸ਼ ਨੁਹਾਰ|ਮੁਹਾਂਦਰਾ|గుణము|ಹೆಚ್ಚಳ|ความต้องการทางธุรกิจ|ความสามารถ|โครงหลัก|기능|フィーチャ|功能|機能):(?:[^:]+(?:\\r?\\n|\\r|$))*/,lookbehind:!0,inside:{important:{pattern:/(:)[^\\r\\n]+/,lookbehind:!0},keyword:/[^:\\r\\n]+:/}},scenario:{pattern:/((?:^|\\r?\\n|\\r)[ \\t]*)(?:Abstract Scenario|Abstrakt Scenario|Achtergrond|Aer|Ær|Agtergrond|All y'all|Antecedentes|Antecedents|Atburðarás|Atburðarásir|Awww, look mate|B4|Background|Baggrund|Bakgrund|Bakgrunn|Bakgrunnur|Beispiele|Beispiller|Bối cảnh|Cefndir|Cenario|Cenário|Cenario de Fundo|Cenário de Fundo|Cenarios|Cenários|Contesto|Context|Contexte|Contexto|Conto|Contoh|Contone|Dæmi|Dasar|Dead men tell no tales|Delineacao do Cenario|Delineação do Cenário|Dis is what went down|Dữ liệu|Dyagram senaryo|Dyagram Senaryo|Egzanp|Ejemplos|Eksempler|Ekzemploj|Enghreifftiau|Esbozo do escenario|Escenari|Escenario|Esempi|Esquema de l'escenari|Esquema del escenario|Esquema do Cenario|Esquema do Cenário|Examples|EXAMPLZ|Exempel|Exemple|Exemples|Exemplos|First off|Fono|Forgatókönyv|Forgatókönyv vázlat|Fundo|Geçmiş|ghantoH|Grundlage|Hannergrond|Háttér|Heave to|Istorik|Juhtumid|Keadaan|Khung kịch bản|Khung tình huống|Kịch bản|Koncept|Konsep skenario|Kontèks|Kontekst|Kontekstas|Konteksts|Kontext|Konturo de la scenaro|Latar Belakang|lut|lut chovnatlh|lutmey|Lýsing Atburðarásar|Lýsing Dæma|Menggariskan Senario|MISHUN|MISHUN SRSLY|mo'|Náčrt Scenára|Náčrt Scénáře|Náčrt Scenáru|Oris scenarija|Örnekler|Osnova|Osnova Scenára|Osnova scénáře|Osnutek|Ozadje|Paraugs|Pavyzdžiai|Példák|Piemēri|Plan du scénario|Plan du Scénario|Plan senaryo|Plan Senaryo|Plang vum Szenario|Pozadí|Pozadie|Pozadina|Príklady|Příklady|Primer|Primeri|Primjeri|Przykłady|Raamstsenaarium|Reckon it's like|Rerefons|Scenár|Scénář|Scenarie|Scenarij|Scenarijai|Scenarijaus šablonas|Scenariji|Scenārijs|Scenārijs pēc parauga|Scenarijus|Scenario|Scénario|Scenario Amlinellol|Scenario Outline|Scenario Template|Scenariomal|Scenariomall|Scenarios|Scenariu|Scenariusz|Scenaro|Schema dello scenario|Se ðe|Se the|Se þe|Senario|Senaryo|Senaryo deskripsyon|Senaryo Deskripsyon|Senaryo taslağı|Shiver me timbers|Situācija|Situai|Situasie|Situasie Uiteensetting|Skenario|Skenario konsep|Skica|Structura scenariu|Structură scenariu|Struktura scenarija|Stsenaarium|Swa|Swa hwaer swa|Swa hwær swa|Szablon scenariusza|Szenario|Szenariogrundriss|Tapaukset|Tapaus|Tapausaihio|Taust|Tausta|Template Keadaan|Template Senario|Template Situai|The thing of it is|Tình huống|Variantai|Voorbeelde|Voorbeelden|Wharrimean is|Yo\\-ho\\-ho|You'll wanna|Założenia|Παραδείγματα|Περιγραφή Σεναρίου|Σενάρια|Σενάριο|Υπόβαθρο|Кереш|Контекст|Концепт|Мисаллар|Мисоллар|Основа|Передумова|Позадина|Предистория|Предыстория|Приклади|Пример|Примери|Примеры|Рамка на сценарий|Скица|Структура сценарија|Структура сценария|Структура сценарію|Сценарий|Сценарий структураси|Сценарийның төзелеше|Сценарији|Сценарио|Сценарій|Тарих|Үрнәкләр|דוגמאות|רקע|תבנית תרחיש|תרחיש|الخلفية|الگوی سناریو|امثلة|پس منظر|زمینه|سناریو|سيناريو|سيناريو مخطط|مثالیں|منظر نامے کا خاکہ|منظرنامہ|نمونه ها|उदाहरण|परिदृश्य|परिदृश्य रूपरेखा|पृष्ठभूमि|ਉਦਾਹਰਨਾਂ|ਪਟਕਥਾ|ਪਟਕਥਾ ਢਾਂਚਾ|ਪਟਕਥਾ ਰੂਪ ਰੇਖਾ|ਪਿਛੋਕੜ|ఉదాహరణలు|కథనం|నేపథ్యం|సన్నివేశం|ಉದಾಹರಣೆಗಳು|ಕಥಾಸಾರಾಂಶ|ವಿವರಣೆ|ಹಿನ್ನೆಲೆ|โครงสร้างของเหตุการณ์|ชุดของตัวอย่าง|ชุดของเหตุการณ์|แนวคิด|สรุปเหตุการณ์|เหตุการณ์|배경|시나리오|시나리오 개요|예|サンプル|シナリオ|シナリオアウトライン|シナリオテンプレ|シナリオテンプレート|テンプレ|例|例子|剧本|剧本大纲|劇本|劇本大綱|场景|场景大纲|場景|場景大綱|背景):[^:\\r\\n]*/,lookbehind:!0,inside:{important:{pattern:/(:)[^\\r\\n]*/,lookbehind:!0},keyword:/[^:\\r\\n]+:/}},\"table-body\":{pattern:/((?:\\r?\\n|\\r)[ \\t]*\\|.+\\|[^\\r\\n]*)+/,lookbehind:!0,inside:{outline:{pattern:/<[^>]+?>/,alias:\"variable\"},td:{pattern:/\\s*[^\\s|][^|]*/,alias:\"string\"},punctuation:/\\|/}},\"table-head\":{pattern:/(?:\\r?\\n|\\r)[ \\t]*\\|.+\\|[^\\r\\n]*/,inside:{th:{pattern:/\\s*[^\\s|][^|]*/,alias:\"variable\"},punctuation:/\\|/}},atrule:{pattern:/((?:\\r?\\n|\\r)[ \\t]+)(?:'ach|'a|'ej|7|a|A také|A taktiež|A tiež|A zároveň|Aber|Ac|Adott|Akkor|Ak|Aleshores|Ale|Ali|Allora|Alors|Als|Ama|Amennyiben|Amikor|Ampak|an|AN|Ananging|And y'all|And|Angenommen|Anrhegedig a|An|Apabila|Atès|Atesa|Atunci|Avast!|Aye|A|awer|Bagi|Banjur|Bet|Biết|Blimey!|Buh|But at the end of the day I reckon|But y'all|But|BUT|Cal|Când|Cando|Cand|Ce|Cuando|Če|Ða ðe|Ða|Dadas|Dada|Dados|Dado|DaH ghu' bejlu'|dann|Dann|Dano|Dan|Dar|Dat fiind|Data|Date fiind|Date|Dati fiind|Dati|Daţi fiind|Dați fiind|Dato|DEN|Den youse gotta|Dengan|De|Diberi|Diyelim ki|Donada|Donat|Donitaĵo|Do|Dun|Duota|Ðurh|Eeldades|Ef|Eğer ki|Entao|Então|Entón|Entonces|En|Epi|E|És|Etant donnée|Etant donné|Et|Étant données|Étant donnée|Étant donné|Etant données|Etant donnés|Étant donnés|Fakat|Gangway!|Gdy|Gegeben seien|Gegeben sei|Gegeven|Gegewe|ghu' noblu'|Gitt|Given y'all|Given|Givet|Givun|Ha|Cho|I CAN HAZ|In|Ir|It's just unbelievable|I|Ja|Jeśli|Jeżeli|Kadar|Kada|Kad|Kai|Kaj|Když|Keď|Kemudian|Ketika|Khi|Kiedy|Ko|Kuid|Kui|Kun|Lan|latlh|Le sa a|Let go and haul|Le|Lè sa a|Lè|Logo|Lorsqu'<|Lorsque|mä|Maar|Mais|Mając|Majd|Maka|Manawa|Mas|Ma|Menawa|Men|Mutta|Nalikaning|Nalika|Nanging|Når|När|Nato|Nhưng|Niin|Njuk|O zaman|Og|Och|Oletetaan|Onda|Ond|Oraz|Pak|Pero|Però|Podano|Pokiaľ|Pokud|Potem|Potom|Privzeto|Pryd|qaSDI'|Quando|Quand|Quan|Så|Sed|Se|Siis|Sipoze ke|Sipoze Ke|Sipoze|Si|Şi|Și|Soit|Stel|Tada|Tad|Takrat|Tak|Tapi|Ter|Tetapi|Tha the|Tha|Then y'all|Then|Thì|Thurh|Toda|Too right|ugeholl|Und|Un|Và|vaj|Vendar|Ve|wann|Wanneer|WEN|Wenn|When y'all|When|Wtedy|Wun|Y'know|Yeah nah|Yna|Youse know like when|Youse know when youse got|Y|Za predpokladu|Za předpokladu|Zadani|Zadano|Zadan|Zadate|Zadato|Zakładając|Zaradi|Zatati|Þa þe|Þa|Þá|Þegar|Þurh|Αλλά|Δεδομένου|Και|Όταν|Τότε|А також|Агар|Але|Али|Аммо|А|Әгәр|Әйтик|Әмма|Бирок|Ва|Вә|Дадено|Дано|Допустим|Если|Задате|Задати|Задато|И|І|К тому же|Када|Кад|Когато|Когда|Коли|Ләкин|Лекин|Нәтиҗәдә|Нехай|Но|Онда|Припустимо, що|Припустимо|Пусть|Также|Та|Тогда|Тоді|То|Унда|Һәм|Якщо|אבל|אזי|אז|בהינתן|וגם|כאשר|آنگاه|اذاً|اگر|اما|اور|با فرض|بالفرض|بفرض|پھر|تب|ثم|جب|عندما|فرض کیا|لكن|لیکن|متى|هنگامی|و|अगर|और|कदा|किन्तु|चूंकि|जब|तथा|तदा|तब|परन्तु|पर|यदि|ਅਤੇ|ਜਦੋਂ|ਜਿਵੇਂ ਕਿ|ਜੇਕਰ|ਤਦ|ਪਰ|అప్పుడు|ఈ పరిస్థితిలో|కాని|చెప్పబడినది|మరియు|ಆದರೆ|ನಂತರ|ನೀಡಿದ|ಮತ್ತು|ಸ್ಥಿತಿಯನ್ನು|กำหนดให้|ดังนั้น|แต่|เมื่อ|และ|그러면<|그리고<|단<|만약<|만일<|먼저<|조건<|하지만<|かつ<|しかし<|ただし<|ならば<|もし<|並且<|但し<|但是<|假如<|假定<|假設<|假设<|前提<|同时<|同時<|并且<|当<|當<|而且<|那么<|那麼<)(?=[ \\t]+)/,lookbehind:!0},string:{pattern:/\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|'(?:\\\\.|[^'\\\\\\r\\n])*'/,inside:{outline:{pattern:/<[^>]+?>/,alias:\"variable\"}}},outline:{pattern:/<[^>]+?>/,alias:\"variable\"}};\nPrism.languages.git={comment:/^#.*/m,deleted:/^[-–].*/m,inserted:/^\\+.*/m,string:/(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,command:{pattern:/^.*\\$ git .*$/m,inside:{parameter:/\\s--?\\w+/m}},coord:/^@@.*@@$/m,commit_sha1:/^commit \\w{40}$/m};\nPrism.languages.go=Prism.languages.extend(\"clike\",{keyword:/\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,builtin:/\\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\\b/,\"boolean\":/\\b(?:_|iota|nil|true|false)\\b/,operator:/[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,number:/\\b(-?(0x[a-f\\d]+|(\\d+\\.?\\d*|\\.\\d+)(e[-+]?\\d+)?)i?)\\b/i,string:{pattern:/([\"'`])(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,greedy:!0}}),delete Prism.languages.go[\"class-name\"];\nPrism.languages.groovy=Prism.languages.extend(\"clike\",{keyword:/\\b(?:as|def|in|abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\b/,string:[{pattern:/(\"\"\"|''')[\\s\\S]*?\\1|(?:\\$\\/)(?:\\$\\/\\$|[\\s\\S])*?\\/\\$/,greedy:!0},{pattern:/([\"'\\/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0}],number:/\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?[\\d]+)?)[glidf]?\\b/i,operator:{pattern:/(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.{1,2}(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,lookbehind:!0},punctuation:/\\.+|[{}[\\];(),:$]/}),Prism.languages.insertBefore(\"groovy\",\"string\",{shebang:{pattern:/#!.+/,alias:\"comment\"}}),Prism.languages.insertBefore(\"groovy\",\"punctuation\",{\"spock-block\":/\\b(?:setup|given|when|then|and|cleanup|expect|where):/}),Prism.languages.insertBefore(\"groovy\",\"function\",{annotation:{alias:\"punctuation\",pattern:/(^|[^.])@\\w+/,lookbehind:!0}}),Prism.hooks.add(\"wrap\",function(e){if(\"groovy\"===e.language&&\"string\"===e.type){var t=e.content[0];if(\"'\"!=t){var n=/([^\\\\])(?:\\$(?:\\{.*?\\}|[\\w.]+))/;\"$\"===t&&(n=/([^\\$])(?:\\$(?:\\{.*?\\}|[\\w.]+))/),e.content=e.content.replace(/&lt;/g,\"<\").replace(/&amp;/g,\"&\"),e.content=Prism.highlight(e.content,{expression:{pattern:n,lookbehind:!0,inside:Prism.languages.groovy}}),e.classes.push(\"/\"===t?\"regex\":\"gstring\")}}});\n!function(e){e.languages.haml={\"multiline-comment\":{pattern:/((?:^|\\r?\\n|\\r)([\\t ]*))(?:\\/|-#).*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.+)*/,lookbehind:!0,alias:\"comment\"},\"multiline-code\":[{pattern:/((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*,[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.*,[\\t ]*)*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.+)/,lookbehind:!0,inside:{rest:e.languages.ruby}},{pattern:/((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*\\|[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.*\\|[\\t ]*)*/,lookbehind:!0,inside:{rest:e.languages.ruby}}],filter:{pattern:/((?:^|\\r?\\n|\\r)([\\t ]*)):[\\w-]+(?:(?:\\r?\\n|\\r)(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/,lookbehind:!0,inside:{\"filter-name\":{pattern:/^:[\\w-]+/,alias:\"variable\"}}},markup:{pattern:/((?:^|\\r?\\n|\\r)[\\t ]*)<.+/,lookbehind:!0,inside:{rest:e.languages.markup}},doctype:{pattern:/((?:^|\\r?\\n|\\r)[\\t ]*)!!!(?: .+)?/,lookbehind:!0},tag:{pattern:/((?:^|\\r?\\n|\\r)[\\t ]*)[%.#][\\w\\-#.]*[\\w\\-](?:\\([^)]+\\)|\\{(?:\\{[^}]+\\}|[^}])+\\}|\\[[^\\]]+\\])*[\\/<>]*/,lookbehind:!0,inside:{attributes:[{pattern:/(^|[^#])\\{(?:\\{[^}]+\\}|[^}])+\\}/,lookbehind:!0,inside:{rest:e.languages.ruby}},{pattern:/\\([^)]+\\)/,inside:{\"attr-value\":{pattern:/(=\\s*)(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|[^)\\s]+)/,lookbehind:!0},\"attr-name\":/[\\w:-]+(?=\\s*!?=|\\s*[,)])/,punctuation:/[=(),]/}},{pattern:/\\[[^\\]]+\\]/,inside:{rest:e.languages.ruby}}],punctuation:/[<>]/}},code:{pattern:/((?:^|\\r?\\n|\\r)[\\t ]*(?:[~-]|[&!]?=)).+/,lookbehind:!0,inside:{rest:e.languages.ruby}},interpolation:{pattern:/#\\{[^}]+\\}/,inside:{delimiter:{pattern:/^#\\{|\\}$/,alias:\"punctuation\"},rest:e.languages.ruby}},punctuation:{pattern:/((?:^|\\r?\\n|\\r)[\\t ]*)[~=\\-&!]+/,lookbehind:!0}};for(var t=\"((?:^|\\\\r?\\\\n|\\\\r)([\\\\t ]*)):{{filter_name}}(?:(?:\\\\r?\\\\n|\\\\r)(?:\\\\2[\\\\t ]+.+|\\\\s*?(?=\\\\r?\\\\n|\\\\r)))+\",r=[\"css\",{filter:\"coffee\",language:\"coffeescript\"},\"erb\",\"javascript\",\"less\",\"markdown\",\"ruby\",\"scss\",\"textile\"],n={},a=0,i=r.length;i>a;a++){var l=r[a];l=\"string\"==typeof l?{filter:l,language:l}:l,e.languages[l.language]&&(n[\"filter-\"+l.filter]={pattern:RegExp(t.replace(\"{{filter_name}}\",l.filter)),lookbehind:!0,inside:{\"filter-name\":{pattern:/^:[\\w-]+/,alias:\"variable\"},rest:e.languages[l.language]}})}e.languages.insertBefore(\"haml\",\"filter\",n)}(Prism);\n!function(e){var a=/\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/;e.languages.handlebars=e.languages.extend(\"markup\",{handlebars:{pattern:a,inside:{delimiter:{pattern:/^\\{\\{\\{?|\\}\\}\\}?$/i,alias:\"punctuation\"},string:/([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,number:/\\b-?(?:0x[\\dA-Fa-f]+|\\d*\\.?\\d+(?:[Ee][+-]?\\d+)?)\\b/,\"boolean\":/\\b(?:true|false)\\b/,block:{pattern:/^(\\s*~?\\s*)[#\\/]\\S+?(?=\\s*~?\\s*$|\\s)/i,lookbehind:!0,alias:\"keyword\"},brackets:{pattern:/\\[[^\\]]+\\]/,inside:{punctuation:/\\[|\\]/,variable:/[\\s\\S]+/}},punctuation:/[!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,variable:/[^!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/}}}),e.languages.insertBefore(\"handlebars\",\"tag\",{\"handlebars-comment\":{pattern:/\\{\\{![\\s\\S]*?\\}\\}/,alias:[\"handlebars\",\"comment\"]}}),e.hooks.add(\"before-highlight\",function(e){\"handlebars\"===e.language&&(e.tokenStack=[],e.backupCode=e.code,e.code=e.code.replace(a,function(a){for(var n=e.tokenStack.length;-1!==e.backupCode.indexOf(\"___HANDLEBARS\"+n+\"___\");)++n;return e.tokenStack[n]=a,\"___HANDLEBARS\"+n+\"___\"}))}),e.hooks.add(\"before-insert\",function(e){\"handlebars\"===e.language&&(e.code=e.backupCode,delete e.backupCode)}),e.hooks.add(\"after-highlight\",function(a){if(\"handlebars\"===a.language){for(var n=0,t=Object.keys(a.tokenStack);n<t.length;++n){var r=t[n],o=a.tokenStack[r];a.highlightedCode=a.highlightedCode.replace(\"___HANDLEBARS\"+r+\"___\",e.highlight(o,a.grammar,\"handlebars\").replace(/\\$/g,\"$$$$\"))}a.element.innerHTML=a.highlightedCode}})}(Prism);\nPrism.languages.haskell={comment:{pattern:/(^|[^-!#$%*+=?&@|~.:<>^\\\\\\/])(?:--[^-!#$%*+=?&@|~.:<>^\\\\\\/].*|{-[\\s\\S]*?-})/m,lookbehind:!0},\"char\":/'(?:[^\\\\']|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+))'/,string:{pattern:/\"(?:[^\\\\\"]|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+)|\\\\\\s+\\\\)*\"/,greedy:!0},keyword:/\\b(?:case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b/,import_statement:{pattern:/((?:\\r?\\n|\\r|^)\\s*)import\\s+(?:qualified\\s+)?(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+(?:[A-Z][_a-zA-Z0-9']*)(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,lookbehind:!0,inside:{keyword:/\\b(?:import|qualified|as|hiding)\\b/}},builtin:/\\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\\b/,number:/\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0o[0-7]+|0x[0-9a-f]+)\\b/i,operator:/\\s\\.\\s|[-!#$%*+=?&@|~.:<>^\\\\\\/]*\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]+|[-!#$%*+=?&@|~.:<>^\\\\\\/]+\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]*|[-!#$%*+=?&@|~:<>^\\\\\\/]+|`([A-Z][\\w']*\\.)*[_a-z][\\w']*`/,hvariable:/\\b(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*\\b/,constant:/\\b(?:[A-Z][\\w']*\\.)*[A-Z][\\w']*\\b/,punctuation:/[{}[\\];(),.:]/};\nPrism.languages.http={\"request-line\":{pattern:/^(?:POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\\shttps?:\\/\\/\\S+\\sHTTP\\/[0-9.]+/m,inside:{property:/^(?:POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\\b/,\"attr-name\":/:\\w+/}},\"response-status\":{pattern:/^HTTP\\/1.[01] \\d+.*/m,inside:{property:{pattern:/(^HTTP\\/1.[01] )\\d+.*/i,lookbehind:!0}}},\"header-name\":{pattern:/^[\\w-]+:(?=.)/m,alias:\"keyword\"}};var httpLanguages={\"application/json\":Prism.languages.javascript,\"application/xml\":Prism.languages.markup,\"text/xml\":Prism.languages.markup,\"text/html\":Prism.languages.markup};for(var contentType in httpLanguages)if(httpLanguages[contentType]){var options={};options[contentType]={pattern:new RegExp(\"(content-type:\\\\s*\"+contentType+\"[\\\\w\\\\W]*?)(?:\\\\r?\\\\n|\\\\r){2}[\\\\w\\\\W]*\",\"i\"),lookbehind:!0,inside:{rest:httpLanguages[contentType]}},Prism.languages.insertBefore(\"http\",\"header-name\",options)};\nPrism.languages.java=Prism.languages.extend(\"clike\",{keyword:/\\b(?:abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while)\\b/,number:/\\b0b[01]+\\b|\\b0x[\\da-f]*\\.?[\\da-fp\\-]+\\b|\\b\\d*\\.?\\d+(?:e[+-]?\\d+)?[df]?\\b/i,operator:{pattern:/(^|[^.])(?:\\+[+=]?|-[-=]?|!=?|<<?=?|>>?>?=?|==?|&[&=]?|\\|[|=]?|\\*=?|\\/=?|%=?|\\^=?|[?:~])/m,lookbehind:!0}}),Prism.languages.insertBefore(\"java\",\"function\",{annotation:{alias:\"punctuation\",pattern:/(^|[^.])@\\w+/,lookbehind:!0}});\nPrism.languages.json={property:/\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/i,string:{pattern:/\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,greedy:!0},number:/\\b-?(?:0x[\\dA-Fa-f]+|\\d*\\.?\\d+(?:[Ee][+-]?\\d+)?)\\b/,punctuation:/[{}[\\]);,]/,operator:/:/g,\"boolean\":/\\b(?:true|false)\\b/i,\"null\":/\\bnull\\b/i},Prism.languages.jsonp=Prism.languages.json;\n!function(n){n.languages.kotlin=n.languages.extend(\"clike\",{keyword:{pattern:/(^|[^.])\\b(?:abstract|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|else|enum|final|finally|for|fun|get|if|import|in|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|out|override|package|private|protected|public|reified|return|sealed|set|super|tailrec|this|throw|to|try|val|var|when|where|while)\\b/,lookbehind:!0},\"function\":[/\\w+(?=\\s*\\()/,{pattern:/(\\.)\\w+(?=\\s*\\{)/,lookbehind:!0}],number:/\\b(?:0[bx][\\da-fA-F]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?[fFL]?)\\b/,operator:/\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/}),delete n.languages.kotlin[\"class-name\"],n.languages.insertBefore(\"kotlin\",\"string\",{\"raw-string\":{pattern:/(\"\"\"|''')[\\s\\S]*?\\1/,alias:\"string\"}}),n.languages.insertBefore(\"kotlin\",\"keyword\",{annotation:{pattern:/\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,alias:\"builtin\"}}),n.languages.insertBefore(\"kotlin\",\"function\",{label:{pattern:/\\w+@|@\\w+/,alias:\"symbol\"}});var e=[{pattern:/\\$\\{[^}]+\\}/,inside:{delimiter:{pattern:/^\\$\\{|\\}$/,alias:\"variable\"},rest:n.util.clone(n.languages.kotlin)}},{pattern:/\\$\\w+/,alias:\"variable\"}];n.languages.kotlin.string.inside=n.languages.kotlin[\"raw-string\"].inside={interpolation:e}}(Prism);\n!function(a){var e=/\\\\(?:[^a-z()[\\]]|[a-z*]+)/i,n={\"equation-command\":{pattern:e,alias:\"regex\"}};a.languages.latex={comment:/%.*/m,cdata:{pattern:/(\\\\begin\\{((?:verbatim|lstlisting)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,lookbehind:!0},equation:[{pattern:/\\$(?:\\\\[\\s\\S]|[^\\\\$])*\\$|\\\\\\([\\s\\S]*?\\\\\\)|\\\\\\[[\\s\\S]*?\\\\\\]/,inside:n,alias:\"string\"},{pattern:/(\\\\begin\\{((?:equation|math|eqnarray|align|multline|gather)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,lookbehind:!0,inside:n,alias:\"string\"}],keyword:{pattern:/(\\\\(?:begin|end|ref|cite|label|usepackage|documentclass)(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,lookbehind:!0},url:{pattern:/(\\\\url\\{)[^}]+(?=\\})/,lookbehind:!0},headline:{pattern:/(\\\\(?:part|chapter|section|subsection|frametitle|subsubsection|paragraph|subparagraph|subsubparagraph|subsubsubparagraph)\\*?(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\}(?:\\[[^\\]]+\\])?)/,lookbehind:!0,alias:\"class-name\"},\"function\":{pattern:e,alias:\"selector\"},punctuation:/[[\\]{}&]/}}(Prism);\nPrism.languages.less=Prism.languages.extend(\"css\",{comment:[/\\/\\*[\\s\\S]*?\\*\\//,{pattern:/(^|[^\\\\])\\/\\/.*/,lookbehind:!0}],atrule:{pattern:/@[\\w-]+?(?:\\([^{}]+\\)|[^(){};])*?(?=\\s*\\{)/i,inside:{punctuation:/[:()]/}},selector:{pattern:/(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\([^{}]*\\)|[^{};@])*?(?=\\s*\\{)/,inside:{variable:/@+[\\w-]+/}},property:/(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/i,punctuation:/[{}();:,]/,operator:/[+\\-*\\/]/}),Prism.languages.insertBefore(\"less\",\"punctuation\",{\"function\":Prism.languages.less.function}),Prism.languages.insertBefore(\"less\",\"property\",{variable:[{pattern:/@[\\w-]+\\s*:/,inside:{punctuation:/:/}},/@@?[\\w-]+/],\"mixin-usage\":{pattern:/([{;]\\s*)[.#](?!\\d)[\\w-]+.*?(?=[(;])/,lookbehind:!0,alias:\"function\"}});\nPrism.languages.lua={comment:/^#!.+|--(?:\\[(=*)\\[[\\s\\S]*?\\]\\1\\]|.*)/m,string:{pattern:/([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[\\s\\S]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]/,greedy:!0},number:/\\b0x[a-f\\d]+\\.?[a-f\\d]*(?:p[+-]?\\d+)?\\b|\\b\\d+(?:\\.\\B|\\.?\\d*(?:e[+-]?\\d+)?\\b)|\\B\\.\\d+(?:e[+-]?\\d+)?\\b/i,keyword:/\\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,\"function\":/(?!\\d)\\w+(?=\\s*(?:[({]))/,operator:[/[-+*%^&|#]|\\/\\/?|<[<=]?|>[>=]?|[=~]=?/,{pattern:/(^|[^.])\\.\\.(?!\\.)/,lookbehind:!0}],punctuation:/[\\[\\](){},;]|\\.+|:+/};\nPrism.languages.makefile={comment:{pattern:/(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,lookbehind:!0},string:{pattern:/([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},builtin:/\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,symbol:{pattern:/^[^:=\\r\\n]+(?=\\s*:(?!=))/m,inside:{variable:/\\$+(?:[^(){}:#=\\s]+|(?=[({]))/}},variable:/\\$+(?:[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,keyword:[/-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,{pattern:/(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,lookbehind:!0}],operator:/(?:::|[?:+!])?=|[|@]/,punctuation:/[:;(){}]/};\nPrism.languages.markdown=Prism.languages.extend(\"markup\",{}),Prism.languages.insertBefore(\"markdown\",\"prolog\",{blockquote:{pattern:/^>(?:[\\t ]*>)*/m,alias:\"punctuation\"},code:[{pattern:/^(?: {4}|\\t).+/m,alias:\"keyword\"},{pattern:/``.+?``|`[^`\\n]+`/,alias:\"keyword\"}],title:[{pattern:/\\w+.*(?:\\r?\\n|\\r)(?:==+|--+)/,alias:\"important\",inside:{punctuation:/==+$|--+$/}},{pattern:/(^\\s*)#+.+/m,lookbehind:!0,alias:\"important\",inside:{punctuation:/^#+|#+$/}}],hr:{pattern:/(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,lookbehind:!0,alias:\"punctuation\"},list:{pattern:/(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,lookbehind:!0,alias:\"punctuation\"},\"url-reference\":{pattern:/!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,inside:{variable:{pattern:/^(!?\\[)[^\\]]+/,lookbehind:!0},string:/(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,punctuation:/^[\\[\\]!:]|[<>]/},alias:\"url\"},bold:{pattern:/(^|[^\\\\])(\\*\\*|__)(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,lookbehind:!0,inside:{punctuation:/^\\*\\*|^__|\\*\\*$|__$/}},italic:{pattern:/(^|[^\\\\])([*_])(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,lookbehind:!0,inside:{punctuation:/^[*_]|[*_]$/}},url:{pattern:/!?\\[[^\\]]+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)| ?\\[[^\\]\\n]*\\])/,inside:{variable:{pattern:/(!?\\[)[^\\]]+(?=\\]$)/,lookbehind:!0},string:{pattern:/\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/}}}}),Prism.languages.markdown.bold.inside.url=Prism.util.clone(Prism.languages.markdown.url),Prism.languages.markdown.italic.inside.url=Prism.util.clone(Prism.languages.markdown.url),Prism.languages.markdown.bold.inside.italic=Prism.util.clone(Prism.languages.markdown.italic),Prism.languages.markdown.italic.inside.bold=Prism.util.clone(Prism.languages.markdown.bold);\nPrism.languages.nginx=Prism.languages.extend(\"clike\",{comment:{pattern:/(^|[^\"{\\\\])#.*/,lookbehind:!0},keyword:/\\b(?:CONTENT_|DOCUMENT_|GATEWAY_|HTTP_|HTTPS|if_not_empty|PATH_|QUERY_|REDIRECT_|REMOTE_|REQUEST_|SCGI|SCRIPT_|SERVER_|http|events|accept_mutex|accept_mutex_delay|access_log|add_after_body|add_before_body|add_header|addition_types|aio|alias|allow|ancient_browser|ancient_browser_value|auth|auth_basic|auth_basic_user_file|auth_http|auth_http_header|auth_http_timeout|autoindex|autoindex_exact_size|autoindex_localtime|break|charset|charset_map|charset_types|chunked_transfer_encoding|client_body_buffer_size|client_body_in_file_only|client_body_in_single_buffer|client_body_temp_path|client_body_timeout|client_header_buffer_size|client_header_timeout|client_max_body_size|connection_pool_size|create_full_put_path|daemon|dav_access|dav_methods|debug_connection|debug_points|default_type|deny|devpoll_changes|devpoll_events|directio|directio_alignment|disable_symlinks|empty_gif|env|epoll_events|error_log|error_page|expires|fastcgi_buffer_size|fastcgi_buffers|fastcgi_busy_buffers_size|fastcgi_cache|fastcgi_cache_bypass|fastcgi_cache_key|fastcgi_cache_lock|fastcgi_cache_lock_timeout|fastcgi_cache_methods|fastcgi_cache_min_uses|fastcgi_cache_path|fastcgi_cache_purge|fastcgi_cache_use_stale|fastcgi_cache_valid|fastcgi_connect_timeout|fastcgi_hide_header|fastcgi_ignore_client_abort|fastcgi_ignore_headers|fastcgi_index|fastcgi_intercept_errors|fastcgi_keep_conn|fastcgi_max_temp_file_size|fastcgi_next_upstream|fastcgi_no_cache|fastcgi_param|fastcgi_pass|fastcgi_pass_header|fastcgi_read_timeout|fastcgi_redirect_errors|fastcgi_send_timeout|fastcgi_split_path_info|fastcgi_store|fastcgi_store_access|fastcgi_temp_file_write_size|fastcgi_temp_path|flv|geo|geoip_city|geoip_country|google_perftools_profiles|gzip|gzip_buffers|gzip_comp_level|gzip_disable|gzip_http_version|gzip_min_length|gzip_proxied|gzip_static|gzip_types|gzip_vary|if|if_modified_since|ignore_invalid_headers|image_filter|image_filter_buffer|image_filter_jpeg_quality|image_filter_sharpen|image_filter_transparency|imap_capabilities|imap_client_buffer|include|index|internal|ip_hash|keepalive|keepalive_disable|keepalive_requests|keepalive_timeout|kqueue_changes|kqueue_events|large_client_header_buffers|limit_conn|limit_conn_log_level|limit_conn_zone|limit_except|limit_rate|limit_rate_after|limit_req|limit_req_log_level|limit_req_zone|limit_zone|lingering_close|lingering_time|lingering_timeout|listen|location|lock_file|log_format|log_format_combined|log_not_found|log_subrequest|map|map_hash_bucket_size|map_hash_max_size|master_process|max_ranges|memcached_buffer_size|memcached_connect_timeout|memcached_next_upstream|memcached_pass|memcached_read_timeout|memcached_send_timeout|merge_slashes|min_delete_depth|modern_browser|modern_browser_value|mp4|mp4_buffer_size|mp4_max_buffer_size|msie_padding|msie_refresh|multi_accept|open_file_cache|open_file_cache_errors|open_file_cache_min_uses|open_file_cache_valid|open_log_file_cache|optimize_server_names|override_charset|pcre_jit|perl|perl_modules|perl_require|perl_set|pid|pop3_auth|pop3_capabilities|port_in_redirect|post_action|postpone_output|protocol|proxy|proxy_buffer|proxy_buffer_size|proxy_buffering|proxy_buffers|proxy_busy_buffers_size|proxy_cache|proxy_cache_bypass|proxy_cache_key|proxy_cache_lock|proxy_cache_lock_timeout|proxy_cache_methods|proxy_cache_min_uses|proxy_cache_path|proxy_cache_use_stale|proxy_cache_valid|proxy_connect_timeout|proxy_cookie_domain|proxy_cookie_path|proxy_headers_hash_bucket_size|proxy_headers_hash_max_size|proxy_hide_header|proxy_http_version|proxy_ignore_client_abort|proxy_ignore_headers|proxy_intercept_errors|proxy_max_temp_file_size|proxy_method|proxy_next_upstream|proxy_no_cache|proxy_pass|proxy_pass_error_message|proxy_pass_header|proxy_pass_request_body|proxy_pass_request_headers|proxy_read_timeout|proxy_redirect|proxy_redirect_errors|proxy_send_lowat|proxy_send_timeout|proxy_set_body|proxy_set_header|proxy_ssl_session_reuse|proxy_store|proxy_store_access|proxy_temp_file_write_size|proxy_temp_path|proxy_timeout|proxy_upstream_fail_timeout|proxy_upstream_max_fails|random_index|read_ahead|real_ip_header|recursive_error_pages|request_pool_size|reset_timedout_connection|resolver|resolver_timeout|return|rewrite|root|rtsig_overflow_events|rtsig_overflow_test|rtsig_overflow_threshold|rtsig_signo|satisfy|satisfy_any|secure_link_secret|send_lowat|send_timeout|sendfile|sendfile_max_chunk|server|server_name|server_name_in_redirect|server_names_hash_bucket_size|server_names_hash_max_size|server_tokens|set|set_real_ip_from|smtp_auth|smtp_capabilities|so_keepalive|source_charset|split_clients|ssi|ssi_silent_errors|ssi_types|ssi_value_length|ssl|ssl_certificate|ssl_certificate_key|ssl_ciphers|ssl_client_certificate|ssl_crl|ssl_dhparam|ssl_engine|ssl_prefer_server_ciphers|ssl_protocols|ssl_session_cache|ssl_session_timeout|ssl_verify_client|ssl_verify_depth|starttls|stub_status|sub_filter|sub_filter_once|sub_filter_types|tcp_nodelay|tcp_nopush|timeout|timer_resolution|try_files|types|types_hash_bucket_size|types_hash_max_size|underscores_in_headers|uninitialized_variable_warn|upstream|use|user|userid|userid_domain|userid_expires|userid_name|userid_p3p|userid_path|userid_service|valid_referers|variables_hash_bucket_size|variables_hash_max_size|worker_connections|worker_cpu_affinity|worker_priority|worker_processes|worker_rlimit_core|worker_rlimit_nofile|worker_rlimit_sigpending|working_directory|xclient|xml_entities|xslt_entities|xslt_stylesheet|xslt_types)\\b/i}),Prism.languages.insertBefore(\"nginx\",\"keyword\",{variable:/\\$[a-z_]+/i});\nPrism.languages.perl={comment:[{pattern:/(^\\s*)=\\w+[\\s\\S]*?=cut.*/m,lookbehind:!0},{pattern:/(^|[^\\\\$])#.*/,lookbehind:!0}],string:[{pattern:/\\b(?:q|qq|qx|qw)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,greedy:!0},{pattern:/\\b(?:q|qq|qx|qw)\\s+([a-zA-Z0-9])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,greedy:!0},{pattern:/\\b(?:q|qq|qx|qw)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,greedy:!0},{pattern:/\\b(?:q|qq|qx|qw)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}/,greedy:!0},{pattern:/\\b(?:q|qq|qx|qw)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]/,greedy:!0},{pattern:/\\b(?:q|qq|qx|qw)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,greedy:!0},{pattern:/(\"|`)(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,greedy:!0},{pattern:/'(?:[^'\\\\\\r\\n]|\\\\.)*'/,greedy:!0}],regex:[{pattern:/\\b(?:m|qr)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[msixpodualngc]*/,greedy:!0},{pattern:/\\b(?:m|qr)\\s+([a-zA-Z0-9])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[msixpodualngc]*/,greedy:!0},{pattern:/\\b(?:m|qr)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[msixpodualngc]*/,greedy:!0},{pattern:/\\b(?:m|qr)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}[msixpodualngc]*/,greedy:!0},{pattern:/\\b(?:m|qr)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\][msixpodualngc]*/,greedy:!0},{pattern:/\\b(?:m|qr)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>[msixpodualngc]*/,greedy:!0},{pattern:/(^|[^-]\\b)(?:s|tr|y)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2[msixpodualngcer]*/,lookbehind:!0,greedy:!0},{pattern:/(^|[^-]\\b)(?:s|tr|y)\\s+([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2[msixpodualngcer]*/,lookbehind:!0,greedy:!0},{pattern:/(^|[^-]\\b)(?:s|tr|y)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[msixpodualngcer]*/,lookbehind:!0,greedy:!0},{pattern:/(^|[^-]\\b)(?:s|tr|y)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}[msixpodualngcer]*/,lookbehind:!0,greedy:!0},{pattern:/(^|[^-]\\b)(?:s|tr|y)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\][msixpodualngcer]*/,lookbehind:!0,greedy:!0},{pattern:/(^|[^-]\\b)(?:s|tr|y)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>[msixpodualngcer]*/,lookbehind:!0,greedy:!0},{pattern:/\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\/[msixpodualngc]*(?=\\s*(?:$|[\\r\\n,.;})&|\\-+*~<>!?^]|(lt|gt|le|ge|eq|ne|cmp|not|and|or|xor|x)\\b))/,greedy:!0}],variable:[/[&*$@%]\\{\\^[A-Z]+\\}/,/[&*$@%]\\^[A-Z_]/,/[&*$@%]#?(?=\\{)/,/[&*$@%]#?(?:(?:::)*'?(?!\\d)[\\w$]+)+(?:::)*/i,/[&*$@%]\\d+/,/(?!%=)[$@%][!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~]/],filehandle:{pattern:/<(?![<=])\\S*>|\\b_\\b/,alias:\"symbol\"},vstring:{pattern:/v\\d+(?:\\.\\d+)*|\\d+(?:\\.\\d+){2,}/,alias:\"string\"},\"function\":{pattern:/sub [a-z0-9_]+/i,inside:{keyword:/sub/}},keyword:/\\b(?:any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|say|state|sub|switch|undef|unless|until|use|when|while)\\b/,number:/\\b-?(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0b[01](?:_?[01])*|(?:\\d(?:_?\\d)*)?\\.?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)\\b/,operator:/-[rwxoRWXOezsfdlpSbctugkTBMAC]\\b|\\+[+=]?|-[-=>]?|\\*\\*?=?|\\/\\/?=?|=[=~>]?|~[~=]?|\\|\\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\\.(?:=|\\.\\.?)?|[\\\\?]|\\bx(?:=|\\b)|\\b(?:lt|gt|le|ge|eq|ne|cmp|not|and|or|xor)\\b/,punctuation:/[{}[\\];(),:]/};\nPrism.languages.php=Prism.languages.extend(\"clike\",{string:{pattern:/([\"'])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,greedy:!0},keyword:/\\b(?:and|or|xor|array|as|break|case|cfunction|class|const|continue|declare|default|die|do|else|elseif|enddeclare|endfor|endforeach|endif|endswitch|endwhile|extends|for|foreach|function|include|include_once|global|if|new|return|static|switch|use|require|require_once|var|while|abstract|interface|public|implements|private|protected|parent|throw|null|echo|print|trait|namespace|final|yield|goto|instanceof|finally|try|catch)\\b/i,constant:/\\b[A-Z0-9_]{2,}\\b/,comment:{pattern:/(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,lookbehind:!0}}),Prism.languages.insertBefore(\"php\",\"class-name\",{\"shell-comment\":{pattern:/(^|[^\\\\])#.*/,lookbehind:!0,alias:\"comment\"}}),Prism.languages.insertBefore(\"php\",\"keyword\",{delimiter:{pattern:/\\?>|<\\?(?:php|=)?/i,alias:\"important\"},variable:/\\$\\w+\\b/i,\"package\":{pattern:/(\\\\|namespace\\s+|use\\s+)[\\w\\\\]+/,lookbehind:!0,inside:{punctuation:/\\\\/}}}),Prism.languages.insertBefore(\"php\",\"operator\",{property:{pattern:/(->)[\\w]+/,lookbehind:!0}}),Prism.languages.markup&&(Prism.hooks.add(\"before-highlight\",function(e){\"php\"===e.language&&/(?:<\\?php|<\\?)/gi.test(e.code)&&(e.tokenStack=[],e.backupCode=e.code,e.code=e.code.replace(/(?:<\\?php|<\\?)[\\s\\S]*?(?:\\?>|$)/gi,function(a){for(var n=e.tokenStack.length;-1!==e.backupCode.indexOf(\"___PHP\"+n+\"___\");)++n;return e.tokenStack[n]=a,\"___PHP\"+n+\"___\"}),e.grammar=Prism.languages.markup)}),Prism.hooks.add(\"before-insert\",function(e){\"php\"===e.language&&e.backupCode&&(e.code=e.backupCode,delete e.backupCode)}),Prism.hooks.add(\"after-highlight\",function(e){if(\"php\"===e.language&&e.tokenStack){e.grammar=Prism.languages.php;for(var a=0,n=Object.keys(e.tokenStack);a<n.length;++a){var t=n[a],r=e.tokenStack[t];e.highlightedCode=e.highlightedCode.replace(\"___PHP\"+t+\"___\",'<span class=\"token php language-php\">'+Prism.highlight(r,e.grammar,\"php\").replace(/\\$/g,\"$$$$\")+\"</span>\")}e.element.innerHTML=e.highlightedCode}}));\nPrism.languages.powershell={comment:[{pattern:/(^|[^`])<#[\\s\\S]*?#>/,lookbehind:!0},{pattern:/(^|[^`])#.*/,lookbehind:!0}],string:[{pattern:/\"(?:`[\\s\\S]|[^`\"])*\"/,greedy:!0,inside:{\"function\":{pattern:/[^`]\\$\\(.*?\\)/,inside:{}}}},{pattern:/'(?:[^']|'')*'/,greedy:!0}],namespace:/\\[[a-z][\\s\\S]*?\\]/i,\"boolean\":/\\$(?:true|false)\\b/i,variable:/\\$\\w+\\b/i,\"function\":[/\\b(?:Add-(?:Computer|Content|History|Member|PSSnapin|Type)|Checkpoint-Computer|Clear-(?:Content|EventLog|History|Item|ItemProperty|Variable)|Compare-Object|Complete-Transaction|Connect-PSSession|ConvertFrom-(?:Csv|Json|StringData)|Convert-Path|ConvertTo-(?:Csv|Html|Json|Xml)|Copy-(?:Item|ItemProperty)|Debug-Process|Disable-(?:ComputerRestore|PSBreakpoint|PSRemoting|PSSessionConfiguration)|Disconnect-PSSession|Enable-(?:ComputerRestore|PSBreakpoint|PSRemoting|PSSessionConfiguration)|Enter-PSSession|Exit-PSSession|Export-(?:Alias|Clixml|Console|Csv|FormatData|ModuleMember|PSSession)|ForEach-Object|Format-(?:Custom|List|Table|Wide)|Get-(?:Alias|ChildItem|Command|ComputerRestorePoint|Content|ControlPanelItem|Culture|Date|Event|EventLog|EventSubscriber|FormatData|Help|History|Host|HotFix|Item|ItemProperty|Job|Location|Member|Module|Process|PSBreakpoint|PSCallStack|PSDrive|PSProvider|PSSession|PSSessionConfiguration|PSSnapin|Random|Service|TraceSource|Transaction|TypeData|UICulture|Unique|Variable|WmiObject)|Group-Object|Import-(?:Alias|Clixml|Csv|LocalizedData|Module|PSSession)|Invoke-(?:Command|Expression|History|Item|RestMethod|WebRequest|WmiMethod)|Join-Path|Limit-EventLog|Measure-(?:Command|Object)|Move-(?:Item|ItemProperty)|New-(?:Alias|Event|EventLog|Item|ItemProperty|Module|ModuleManifest|Object|PSDrive|PSSession|PSSessionConfigurationFile|PSSessionOption|PSTransportOption|Service|TimeSpan|Variable|WebServiceProxy)|Out-(?:Default|File|GridView|Host|Null|Printer|String)|Pop-Location|Push-Location|Read-Host|Receive-(?:Job|PSSession)|Register-(?:EngineEvent|ObjectEvent|PSSessionConfiguration|WmiEvent)|Remove-(?:Computer|Event|EventLog|Item|ItemProperty|Job|Module|PSBreakpoint|PSDrive|PSSession|PSSnapin|TypeData|Variable|WmiObject)|Rename-(?:Computer|Item|ItemProperty)|Reset-ComputerMachinePassword|Resolve-Path|Restart-(?:Computer|Service)|Restore-Computer|Resume-(?:Job|Service)|Save-Help|Select-(?:Object|String|Xml)|Send-MailMessage|Set-(?:Alias|Content|Date|Item|ItemProperty|Location|PSBreakpoint|PSDebug|PSSessionConfiguration|Service|StrictMode|TraceSource|Variable|WmiInstance)|Show-(?:Command|ControlPanelItem|EventLog)|Sort-Object|Split-Path|Start-(?:Job|Process|Service|Sleep|Transaction)|Stop-(?:Computer|Job|Process|Service)|Suspend-(?:Job|Service)|Tee-Object|Test-(?:ComputerSecureChannel|Connection|ModuleManifest|Path|PSSessionConfigurationFile)|Trace-Command|Unblock-File|Undo-Transaction|Unregister-(?:Event|PSSessionConfiguration)|Update-(?:FormatData|Help|List|TypeData)|Use-Transaction|Wait-(?:Event|Job|Process)|Where-Object|Write-(?:Debug|Error|EventLog|Host|Output|Progress|Verbose|Warning))\\b/i,/\\b(?:ac|cat|chdir|clc|cli|clp|clv|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|ebp|echo|epal|epcsv|epsn|erase|fc|fl|ft|fw|gal|gbp|gc|gci|gcs|gdr|gi|gl|gm|gp|gps|group|gsv|gu|gv|gwmi|iex|ii|ipal|ipcsv|ipsn|irm|iwmi|iwr|kill|lp|ls|measure|mi|mount|move|mp|mv|nal|ndr|ni|nv|ogv|popd|ps|pushd|pwd|rbp|rd|rdr|ren|ri|rm|rmdir|rni|rnp|rp|rv|rvpa|rwmi|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls|sort|sp|spps|spsv|start|sv|swmi|tee|trcm|type|write)\\b/i],keyword:/\\b(?:Begin|Break|Catch|Class|Continue|Data|Define|Do|DynamicParam|Else|ElseIf|End|Exit|Filter|Finally|For|ForEach|From|Function|If|InlineScript|Parallel|Param|Process|Return|Sequence|Switch|Throw|Trap|Try|Until|Using|Var|While|Workflow)\\b/i,operator:{pattern:/(\\W?)(?:!|-(eq|ne|gt|ge|lt|le|sh[lr]|not|b?(?:and|x?or)|(?:Not)?(?:Like|Match|Contains|In)|Replace|Join|is(?:Not)?|as)\\b|-[-=]?|\\+[+=]?|[*\\/%]=?)/i,lookbehind:!0},punctuation:/[|{}[\\];(),.]/},Prism.languages.powershell.string[0].inside.boolean=Prism.languages.powershell.boolean,Prism.languages.powershell.string[0].inside.variable=Prism.languages.powershell.variable,Prism.languages.powershell.string[0].inside.function.inside=Prism.util.clone(Prism.languages.powershell);\nPrism.languages.properties={comment:/^[ \\t]*[#!].*$/m,\"attr-value\":{pattern:/(^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+?(?: *[=:] *| ))(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])+/m,lookbehind:!0},\"attr-name\":/^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+?(?= *[=:] *| )/m,punctuation:/[=:]/};\nPrism.languages.protobuf=Prism.languages.extend(\"clike\",{keyword:/\\b(?:package|import|message|enum)\\b/,builtin:/\\b(?:required|repeated|optional|reserved)\\b/,primitive:{pattern:/\\b(?:double|float|int32|int64|uint32|uint64|sint32|sint64|fixed32|fixed64|sfixed32|sfixed64|bool|string|bytes)\\b/,alias:\"symbol\"}});\n!function(e){e.languages.puppet={heredoc:[{pattern:/(@\\(\"([^\"\\r\\n\\/):]+)\"(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r))*?[ \\t]*\\|?[ \\t]*-?[ \\t]*\\2/,lookbehind:!0,alias:\"string\",inside:{punctuation:/(?=\\S).*\\S(?= *$)/}},{pattern:/(@\\(([^\"\\r\\n\\/):]+)(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r))*?[ \\t]*\\|?[ \\t]*-?[ \\t]*\\2/,lookbehind:!0,alias:\"string\",inside:{punctuation:/(?=\\S).*\\S(?= *$)/}},{pattern:/@\\(\"?(?:[^\"\\r\\n\\/):]+)\"?(?:\\/[nrts$uL]*)?\\)/,alias:\"string\",inside:{punctuation:{pattern:/(\\().+?(?=\\))/,lookbehind:!0}}}],\"multiline-comment\":{pattern:/(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,lookbehind:!0,alias:\"comment\"},regex:{pattern:/((?:\\bnode\\s+|[~=\\(\\[\\{,]\\s*|[=+]>\\s*|^\\s*))\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/(?:[imx]+\\b|\\B)/,lookbehind:!0,inside:{\"extended-regex\":{pattern:/^\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/[im]*x[im]*$/,inside:{comment:/#.*/}}}},comment:{pattern:/(^|[^\\\\])#.*/,lookbehind:!0},string:{pattern:/([\"'])(?:\\$\\{(?:[^'\"}]|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}|(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,inside:{\"double-quoted\":{pattern:/^\"[\\s\\S]*\"$/,inside:{}}}},variable:{pattern:/\\$(?:::)?\\w+(?:::\\w+)*/,inside:{punctuation:/::/}},\"attr-name\":/(?:\\w+|\\*)(?=\\s*=>)/,\"function\":[{pattern:/(\\.)(?!\\d)\\w+/,lookbehind:!0},/\\b(?:contain|debug|err|fail|include|info|notice|realize|require|tag|warning)\\b|\\b(?!\\d)\\w+(?=\\()/],number:/\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d+)?(?:e-?\\d+)?)\\b/i,\"boolean\":/\\b(?:true|false)\\b/,keyword:/\\b(?:application|attr|case|class|consumes|default|define|else|elsif|function|if|import|inherits|node|private|produces|type|undef|unless)\\b/,datatype:{pattern:/\\b(?:Any|Array|Boolean|Callable|Catalogentry|Class|Collection|Data|Default|Enum|Float|Hash|Integer|NotUndef|Numeric|Optional|Pattern|Regexp|Resource|Runtime|Scalar|String|Struct|Tuple|Type|Undef|Variant)\\b/,alias:\"symbol\"},operator:/=[=~>]?|![=~]?|<(?:<\\|?|[=~|-])?|>[>=]?|->?|~>|\\|>?>?|[*\\/%+?]|\\b(?:and|in|or)\\b/,punctuation:/[\\[\\]{}().,;]|:+/};var n=[{pattern:/(^|[^\\\\])\\$\\{(?:[^'\"{}]|\\{[^}]*\\}|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}/,lookbehind:!0,inside:{\"short-variable\":{pattern:/(^\\$\\{)(?!\\w+\\()(?:::)?\\w+(?:::\\w+)*/,lookbehind:!0,alias:\"variable\",inside:{punctuation:/::/}},delimiter:{pattern:/^\\$/,alias:\"variable\"},rest:e.util.clone(e.languages.puppet)}},{pattern:/(^|[^\\\\])\\$(?:::)?\\w+(?:::\\w+)*/,lookbehind:!0,alias:\"variable\",inside:{punctuation:/::/}}];e.languages.puppet.heredoc[0].inside.interpolation=n,e.languages.puppet.string.inside[\"double-quoted\"].inside.interpolation=n}(Prism);\nPrism.languages.python={comment:{pattern:/(^|[^\\\\])#.*/,lookbehind:!0},\"triple-quoted-string\":{pattern:/(\"\"\"|''')[\\s\\S]+?\\1/,greedy:!0,alias:\"string\"},string:{pattern:/(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},\"function\":{pattern:/((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,lookbehind:!0},\"class-name\":{pattern:/(\\bclass\\s+)\\w+/i,lookbehind:!0},keyword:/\\b(?:as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|pass|print|raise|return|try|while|with|yield)\\b/,builtin:/\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\"boolean\":/\\b(?:True|False|None)\\b/,number:/\\b-?(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,operator:/[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not)\\b/,punctuation:/[{}[\\];(),.:]/};\n!function(a){var e=a.util.clone(a.languages.javascript);a.languages.jsx=a.languages.extend(\"markup\",e),a.languages.jsx.tag.pattern=/<\\/?[\\w.:-]+\\s*(?:\\s+(?:[\\w.:-]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+|(?:\\{\\{?[^}]*\\}?\\})))?|\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}))*\\s*\\/?>/i,a.languages.jsx.tag.inside[\"attr-value\"].pattern=/=(?!\\{)(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">]+)/i,a.languages.insertBefore(\"inside\",\"attr-name\",{spread:{pattern:/\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}/,inside:{punctuation:/\\.{3}|[{}.]/,\"attr-value\":/\\w+/}}},a.languages.jsx.tag);var s=a.util.clone(a.languages.jsx);delete s.punctuation,s=a.languages.insertBefore(\"jsx\",\"operator\",{punctuation:/=(?={)|[{}[\\];(),.:]/},{jsx:s}),a.languages.insertBefore(\"inside\",\"attr-value\",{script:{pattern:/=(\\{(?:\\{[^}]*\\}|[^}])+\\})/i,inside:s,alias:\"language-javascript\"}},a.languages.jsx.tag)}(Prism);\nPrism.languages.typescript=Prism.languages.extend(\"javascript\",{keyword:/\\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield|false|true|module|declare|constructor|namespace|abstract|require|type)\\b/,builtin:/\\b(?:string|Function|any|number|boolean|Array|symbol|console)\\b/}),Prism.languages.ts=Prism.languages.typescript;\nPrism.languages.rust={comment:[{pattern:/(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,lookbehind:!0},{pattern:/(^|[^\\\\:])\\/\\/.*/,lookbehind:!0}],string:[{pattern:/b?r(#*)\"(?:\\\\.|(?!\"\\1)[^\\\\\\r\\n])*\"\\1/,greedy:!0},{pattern:/b?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0}],keyword:/\\b(?:abstract|alignof|as|be|box|break|const|continue|crate|do|else|enum|extern|false|final|fn|for|if|impl|in|let|loop|match|mod|move|mut|offsetof|once|override|priv|pub|pure|ref|return|sizeof|static|self|struct|super|true|trait|type|typeof|unsafe|unsized|use|virtual|where|while|yield)\\b/,attribute:{pattern:/#!?\\[.+?\\]/,greedy:!0,alias:\"attr-name\"},\"function\":[/\\w+(?=\\s*\\()/,/\\w+!(?=\\s*\\(|\\[)/],\"macro-rules\":{pattern:/\\w+!/,alias:\"function\"},number:/\\b-?(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(\\d(?:_?\\d)*)?\\.?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:[iu](?:8|16|32|64)?|f32|f64))?\\b/,\"closure-params\":{pattern:/\\|[^|]*\\|(?=\\s*[{-])/,inside:{punctuation:/[|:,]/,operator:/[&*]/}},punctuation:/[{}[\\];(),:]|\\.+|->/,operator:/[-+*\\/%!^=]=?|@|&[&=]?|\\|[|=]?|<<?=?|>>?=?/};\n!function(e){e.languages.sass=e.languages.extend(\"css\",{comment:{pattern:/^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t]+.+)*/m,lookbehind:!0}}),e.languages.insertBefore(\"sass\",\"atrule\",{\"atrule-line\":{pattern:/^(?:[ \\t]*)[@+=].+/m,inside:{atrule:/(?:@[\\w-]+|[+=])/m}}}),delete e.languages.sass.atrule;var a=/\\$[-\\w]+|#\\{\\$[-\\w]+\\}/,t=[/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|or|not)\\b/,{pattern:/(\\s+)-(?=\\s)/,lookbehind:!0}];e.languages.insertBefore(\"sass\",\"property\",{\"variable-line\":{pattern:/^[ \\t]*\\$.+/m,inside:{punctuation:/:/,variable:a,operator:t}},\"property-line\":{pattern:/^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s]+.*)/m,inside:{property:[/[^:\\s]+(?=\\s*:)/,{pattern:/(:)[^:\\s]+/,lookbehind:!0}],punctuation:/:/,variable:a,operator:t,important:e.languages.sass.important}}}),delete e.languages.sass.property,delete e.languages.sass.important,delete e.languages.sass.selector,e.languages.insertBefore(\"sass\",\"punctuation\",{selector:{pattern:/([ \\t]*)\\S(?:,?[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,?[^,\\r\\n]+)*)*/,lookbehind:!0}})}(Prism);\nPrism.languages.scss=Prism.languages.extend(\"css\",{comment:{pattern:/(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,lookbehind:!0},atrule:{pattern:/@[\\w-]+(?:\\([^()]+\\)|[^(])*?(?=\\s+[{;])/,inside:{rule:/@[\\w-]+/}},url:/(?:[-a-z]+-)*url(?=\\()/i,selector:{pattern:/(?=\\S)[^@;{}()]?(?:[^@;{}()]|&|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}]+[:{][^}]+))/m,inside:{parent:{pattern:/&/,alias:\"important\"},placeholder:/%[-\\w]+/,variable:/\\$[-\\w]+|#\\{\\$[-\\w]+\\}/}}}),Prism.languages.insertBefore(\"scss\",\"atrule\",{keyword:[/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i,{pattern:/( +)(?:from|through)(?= )/,lookbehind:!0}]}),Prism.languages.scss.property={pattern:/(?:[\\w-]|\\$[-\\w]+|#\\{\\$[-\\w]+\\})+(?=\\s*:)/i,inside:{variable:/\\$[-\\w]+|#\\{\\$[-\\w]+\\}/}},Prism.languages.insertBefore(\"scss\",\"important\",{variable:/\\$[-\\w]+|#\\{\\$[-\\w]+\\}/}),Prism.languages.insertBefore(\"scss\",\"function\",{placeholder:{pattern:/%[-\\w]+/,alias:\"selector\"},statement:{pattern:/\\B!(?:default|optional)\\b/i,alias:\"keyword\"},\"boolean\":/\\b(?:true|false)\\b/,\"null\":/\\bnull\\b/,operator:{pattern:/(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,lookbehind:!0}}),Prism.languages.scss.atrule.inside.rest=Prism.util.clone(Prism.languages.scss);\nPrism.languages.scheme={comment:/;.*/,string:{pattern:/\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'[^('\\s]*/,greedy:!0},keyword:{pattern:/(\\()(?:define(?:-syntax|-library|-values)?|(?:case-)?lambda|let(?:\\*|rec)?(?:-values)?|else|if|cond|begin|delay(?:-force)?|parameterize|guard|set!|(?:quasi-)?quote|syntax-rules)/,lookbehind:!0},builtin:{pattern:/(\\()(?:(?:cons|car|cdr|list|call-with-current-continuation|call\\/cc|append|abs|apply|eval)\\b|null\\?|pair\\?|boolean\\?|eof-object\\?|char\\?|procedure\\?|number\\?|port\\?|string\\?|vector\\?|symbol\\?|bytevector\\?)/,lookbehind:!0},number:{pattern:/(\\s|\\))[-+]?\\d*\\.?\\d+(?:\\s*[-+]\\s*\\d*\\.?\\d+i)?\\b/,lookbehind:!0},\"boolean\":/#[tf]/,operator:{pattern:/(\\()(?:[-+*%\\/]|[<>]=?|=>?)/,lookbehind:!0},\"function\":{pattern:/(\\()[^\\s()]*(?=\\s)/,lookbehind:!0},punctuation:/[()]/};\nPrism.languages.sql={comment:{pattern:/(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,lookbehind:!0},string:{pattern:/(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2/,greedy:!0,lookbehind:!0},variable:/@[\\w.$]+|@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\"function\":/\\b(?:COUNT|SUM|AVG|MIN|MAX|FIRST|LAST|UCASE|LCASE|MID|LEN|ROUND|NOW|FORMAT)(?=\\s*\\()/i,keyword:/\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR VARYING|CHARACTER (?:SET|VARYING)|CHARSET|CHECK|CHECKPOINT|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMN|COLUMNS|COMMENT|COMMIT|COMMITTED|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS|CONTAINSTABLE|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|DATA(?:BASES?)?|DATE(?:TIME)?|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITER(?:S)?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE(?: PRECISION)?|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE KEY|ELSE|ENABLE|ENCLOSED BY|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPE(?:D BY)?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTO|INVOKER|ISOLATION LEVEL|JOIN|KEYS?|KILL|LANGUAGE SQL|LAST|LEFT|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MODIFIES SQL DATA|MODIFY|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL(?: CHAR VARYING| CHARACTER(?: VARYING)?| VARCHAR)?|NATURAL|NCHAR(?: VARCHAR)?|NEXT|NO(?: SQL|CHECK|CYCLE)?|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READ(?:S SQL DATA|TEXT)?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEATABLE|REPLICATION|REQUIRE|RESTORE|RESTRICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE MODE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|START(?:ING BY)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED BY|TEXT(?:SIZE)?|THEN|TIMESTAMP|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNPIVOT|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?)\\b/i,\"boolean\":/\\b(?:TRUE|FALSE|NULL)\\b/i,number:/\\b-?(?:0x)?\\d*\\.?[\\da-f]+\\b/,operator:/[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,punctuation:/[;[\\]()`,.]/};\nPrism.languages.twig={comment:/\\{#[\\s\\S]*?#\\}/,tag:{pattern:/\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}/,inside:{ld:{pattern:/^(?:\\{\\{-?|\\{%-?\\s*\\w+)/,inside:{punctuation:/^(?:\\{\\{|\\{%)-?/,keyword:/\\w+/}},rd:{pattern:/-?(?:%\\}|\\}\\})$/,inside:{punctuation:/.*/}},string:{pattern:/(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,inside:{punctuation:/^['\"]|['\"]$/}},keyword:/\\b(?:even|if|odd)\\b/,\"boolean\":/\\b(?:true|false|null)\\b/,number:/\\b-?(?:0x[\\dA-Fa-f]+|\\d*\\.?\\d+(?:[Ee][-+]?\\d+)?)\\b/,operator:[{pattern:/(\\s)(?:and|b-and|b-xor|b-or|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,lookbehind:!0},/[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/],property:/\\b[a-zA-Z_]\\w*\\b/,punctuation:/[()\\[\\]{}:.,]/}},other:{pattern:/\\S(?:[\\s\\S]*\\S)?/,inside:Prism.languages.markup}};\nvar typescript=Prism.util.clone(Prism.languages.typescript);Prism.languages.tsx=Prism.languages.extend(\"jsx\",typescript);\nPrism.languages.vhdl={comment:/--.+/,\"vhdl-vectors\":{pattern:/\\b[oxb]\"[\\da-f_]+\"|\"[01uxzwlh-]+\"/i,alias:\"number\"},\"quoted-function\":{pattern:/\"\\S+?\"(?=\\()/,alias:\"function\"},string:/\"(?:[^\\\\\"\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,constant:/\\b(?:use|library)\\b/i,keyword:/\\b(?:'active|'ascending|'base|'delayed|'driving|'driving_value|'event|'high|'image|'instance_name|'last_active|'last_event|'last_value|'left|'leftof|'length|'low|'path_name|'pos|'pred|'quiet|'range|'reverse_range|'right|'rightof|'simple_name|'stable|'succ|'transaction|'val|'value|access|after|alias|all|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|new|next|null|of|on|open|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|report|return|select|severity|shared|signal|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with)\\b/i,\"boolean\":/\\b(?:true|false)\\b/i,\"function\":/\\w+(?=\\()/,number:/'[01uxzwlh-]'|\\b(?:\\d+#[\\da-f_.]+#|\\d[\\d_.]*)(?:e[-+]?\\d+)?/i,operator:/[<>]=?|:=|[-+*\\/&=]|\\b(?:abs|not|mod|rem|sll|srl|sla|sra|rol|ror|and|or|nand|xnor|xor|nor)\\b/i,punctuation:/[{}[\\];(),.:]/};\nPrism.languages.vim={string:/\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\r\\n]|'')*'/,comment:/\".*/,\"function\":/\\w+(?=\\()/,keyword:/\\b(?:ab|abbreviate|abc|abclear|abo|aboveleft|al|all|arga|argadd|argd|argdelete|argdo|arge|argedit|argg|argglobal|argl|arglocal|ar|args|argu|argument|as|ascii|bad|badd|ba|ball|bd|bdelete|be|bel|belowright|bf|bfirst|bl|blast|bm|bmodified|bn|bnext|bN|bNext|bo|botright|bp|bprevious|brea|break|breaka|breakadd|breakd|breakdel|breakl|breaklist|br|brewind|bro|browse|bufdo|b|buffer|buffers|bun|bunload|bw|bwipeout|ca|cabbrev|cabc|cabclear|caddb|caddbuffer|cad|caddexpr|caddf|caddfile|cal|call|cat|catch|cb|cbuffer|cc|ccl|cclose|cd|ce|center|cex|cexpr|cf|cfile|cfir|cfirst|cgetb|cgetbuffer|cgete|cgetexpr|cg|cgetfile|c|change|changes|chd|chdir|che|checkpath|checkt|checktime|cla|clast|cl|clist|clo|close|cmapc|cmapclear|cnew|cnewer|cn|cnext|cN|cNext|cnf|cnfile|cNfcNfile|cnorea|cnoreabbrev|col|colder|colo|colorscheme|comc|comclear|comp|compiler|conf|confirm|con|continue|cope|copen|co|copy|cpf|cpfile|cp|cprevious|cq|cquit|cr|crewind|cuna|cunabbrev|cu|cunmap|cw|cwindow|debugg|debuggreedy|delc|delcommand|d|delete|delf|delfunction|delm|delmarks|diffg|diffget|diffoff|diffpatch|diffpu|diffput|diffsplit|diffthis|diffu|diffupdate|dig|digraphs|di|display|dj|djump|dl|dlist|dr|drop|ds|dsearch|dsp|dsplit|earlier|echoe|echoerr|echom|echomsg|echon|e|edit|el|else|elsei|elseif|em|emenu|endfo|endfor|endf|endfunction|endfun|en|endif|endt|endtry|endw|endwhile|ene|enew|ex|exi|exit|exu|exusage|f|file|files|filetype|fina|finally|fin|find|fini|finish|fir|first|fix|fixdel|fo|fold|foldc|foldclose|folddoc|folddoclosed|foldd|folddoopen|foldo|foldopen|for|fu|fun|function|go|goto|gr|grep|grepa|grepadd|ha|hardcopy|h|help|helpf|helpfind|helpg|helpgrep|helpt|helptags|hid|hide|his|history|ia|iabbrev|iabc|iabclear|if|ij|ijump|il|ilist|imapc|imapclear|in|inorea|inoreabbrev|isearch|isp|isplit|iuna|iunabbrev|iu|iunmap|j|join|ju|jumps|k|keepalt|keepj|keepjumps|kee|keepmarks|laddb|laddbuffer|lad|laddexpr|laddf|laddfile|lan|language|la|last|later|lb|lbuffer|lc|lcd|lch|lchdir|lcl|lclose|let|left|lefta|leftabove|lex|lexpr|lf|lfile|lfir|lfirst|lgetb|lgetbuffer|lgete|lgetexpr|lg|lgetfile|lgr|lgrep|lgrepa|lgrepadd|lh|lhelpgrep|l|list|ll|lla|llast|lli|llist|lmak|lmake|lm|lmap|lmapc|lmapclear|lnew|lnewer|lne|lnext|lN|lNext|lnf|lnfile|lNf|lNfile|ln|lnoremap|lo|loadview|loc|lockmarks|lockv|lockvar|lol|lolder|lop|lopen|lpf|lpfile|lp|lprevious|lr|lrewind|ls|lt|ltag|lu|lunmap|lv|lvimgrep|lvimgrepa|lvimgrepadd|lw|lwindow|mak|make|ma|mark|marks|mat|match|menut|menutranslate|mk|mkexrc|mks|mksession|mksp|mkspell|mkvie|mkview|mkv|mkvimrc|mod|mode|m|move|mzf|mzfile|mz|mzscheme|nbkey|new|n|next|N|Next|nmapc|nmapclear|noh|nohlsearch|norea|noreabbrev|nu|number|nun|nunmap|omapc|omapclear|on|only|o|open|opt|options|ou|ounmap|pc|pclose|ped|pedit|pe|perl|perld|perldo|po|pop|popu|popup|pp|ppop|pre|preserve|prev|previous|p|print|P|Print|profd|profdel|prof|profile|promptf|promptfind|promptr|promptrepl|ps|psearch|pta|ptag|ptf|ptfirst|ptj|ptjump|ptl|ptlast|ptn|ptnext|ptN|ptNext|ptp|ptprevious|ptr|ptrewind|pts|ptselect|pu|put|pw|pwd|pyf|pyfile|py|python|qa|qall|q|quit|quita|quitall|r|read|rec|recover|redi|redir|red|redo|redr|redraw|redraws|redrawstatus|reg|registers|res|resize|ret|retab|retu|return|rew|rewind|ri|right|rightb|rightbelow|rub|ruby|rubyd|rubydo|rubyf|rubyfile|ru|runtime|rv|rviminfo|sal|sall|san|sandbox|sa|sargument|sav|saveas|sba|sball|sbf|sbfirst|sbl|sblast|sbm|sbmodified|sbn|sbnext|sbN|sbNext|sbp|sbprevious|sbr|sbrewind|sb|sbuffer|scripte|scriptencoding|scrip|scriptnames|se|set|setf|setfiletype|setg|setglobal|setl|setlocal|sf|sfind|sfir|sfirst|sh|shell|sign|sil|silent|sim|simalt|sla|slast|sl|sleep|sm|smagic|sm|smap|smapc|smapclear|sme|smenu|sn|snext|sN|sNext|sni|sniff|sno|snomagic|snor|snoremap|snoreme|snoremenu|sor|sort|so|source|spelld|spelldump|spe|spellgood|spelli|spellinfo|spellr|spellrepall|spellu|spellundo|spellw|spellwrong|sp|split|spr|sprevious|sre|srewind|sta|stag|startg|startgreplace|star|startinsert|startr|startreplace|stj|stjump|st|stop|stopi|stopinsert|sts|stselect|sun|sunhide|sunm|sunmap|sus|suspend|sv|sview|syncbind|t|tab|tabc|tabclose|tabd|tabdo|tabe|tabedit|tabf|tabfind|tabfir|tabfirst|tabl|tablast|tabm|tabmove|tabnew|tabn|tabnext|tabN|tabNext|tabo|tabonly|tabp|tabprevious|tabr|tabrewind|tabs|ta|tag|tags|tc|tcl|tcld|tcldo|tclf|tclfile|te|tearoff|tf|tfirst|th|throw|tj|tjump|tl|tlast|tm|tm|tmenu|tn|tnext|tN|tNext|to|topleft|tp|tprevious|tr|trewind|try|ts|tselect|tu|tu|tunmenu|una|unabbreviate|u|undo|undoj|undojoin|undol|undolist|unh|unhide|unlet|unlo|unlockvar|unm|unmap|up|update|verb|verbose|ve|version|vert|vertical|vie|view|vim|vimgrep|vimgrepa|vimgrepadd|vi|visual|viu|viusage|vmapc|vmapclear|vne|vnew|vs|vsplit|vu|vunmap|wa|wall|wh|while|winc|wincmd|windo|winp|winpos|win|winsize|wn|wnext|wN|wNext|wp|wprevious|wq|wqa|wqall|w|write|ws|wsverb|wv|wviminfo|X|xa|xall|x|xit|xm|xmap|xmapc|xmapclear|xme|xmenu|XMLent|XMLns|xn|xnoremap|xnoreme|xnoremenu|xu|xunmap|y|yank)\\b/,builtin:/\\b(?:autocmd|acd|ai|akm|aleph|allowrevins|altkeymap|ambiwidth|ambw|anti|antialias|arab|arabic|arabicshape|ari|arshape|autochdir|autoindent|autoread|autowrite|autowriteall|aw|awa|background|backspace|backup|backupcopy|backupdir|backupext|backupskip|balloondelay|ballooneval|balloonexpr|bdir|bdlay|beval|bex|bexpr|bg|bh|bin|binary|biosk|bioskey|bk|bkc|bomb|breakat|brk|browsedir|bs|bsdir|bsk|bt|bufhidden|buflisted|buftype|casemap|ccv|cdpath|cedit|cfu|ch|charconvert|ci|cin|cindent|cink|cinkeys|cino|cinoptions|cinw|cinwords|clipboard|cmdheight|cmdwinheight|cmp|cms|columns|com|comments|commentstring|compatible|complete|completefunc|completeopt|consk|conskey|copyindent|cot|cpo|cpoptions|cpt|cscopepathcomp|cscopeprg|cscopequickfix|cscopetag|cscopetagorder|cscopeverbose|cspc|csprg|csqf|cst|csto|csverb|cuc|cul|cursorcolumn|cursorline|cwh|debug|deco|def|define|delcombine|dex|dg|dict|dictionary|diff|diffexpr|diffopt|digraph|dip|dir|directory|dy|ea|ead|eadirection|eb|ed|edcompatible|ef|efm|ei|ek|enc|encoding|endofline|eol|ep|equalalways|equalprg|errorbells|errorfile|errorformat|esckeys|et|eventignore|expandtab|exrc|fcl|fcs|fdc|fde|fdi|fdl|fdls|fdm|fdn|fdo|fdt|fen|fenc|fencs|fex|ff|ffs|fileencoding|fileencodings|fileformat|fileformats|fillchars|fk|fkmap|flp|fml|fmr|foldcolumn|foldenable|foldexpr|foldignore|foldlevel|foldlevelstart|foldmarker|foldmethod|foldminlines|foldnestmax|foldtext|formatexpr|formatlistpat|formatoptions|formatprg|fp|fs|fsync|ft|gcr|gd|gdefault|gfm|gfn|gfs|gfw|ghr|gp|grepformat|grepprg|gtl|gtt|guicursor|guifont|guifontset|guifontwide|guiheadroom|guioptions|guipty|guitablabel|guitabtooltip|helpfile|helpheight|helplang|hf|hh|hi|hidden|highlight|hk|hkmap|hkmapp|hkp|hl|hlg|hls|hlsearch|ic|icon|iconstring|ignorecase|im|imactivatekey|imak|imc|imcmdline|imd|imdisable|imi|iminsert|ims|imsearch|inc|include|includeexpr|incsearch|inde|indentexpr|indentkeys|indk|inex|inf|infercase|insertmode|isf|isfname|isi|isident|isk|iskeyword|isprint|joinspaces|js|key|keymap|keymodel|keywordprg|km|kmp|kp|langmap|langmenu|laststatus|lazyredraw|lbr|lcs|linebreak|lines|linespace|lisp|lispwords|listchars|loadplugins|lpl|lsp|lz|macatsui|magic|makeef|makeprg|matchpairs|matchtime|maxcombine|maxfuncdepth|maxmapdepth|maxmem|maxmempattern|maxmemtot|mco|mef|menuitems|mfd|mh|mis|mkspellmem|ml|mls|mm|mmd|mmp|mmt|modeline|modelines|modifiable|modified|more|mouse|mousef|mousefocus|mousehide|mousem|mousemodel|mouses|mouseshape|mouset|mousetime|mp|mps|msm|mzq|mzquantum|nf|nrformats|numberwidth|nuw|odev|oft|ofu|omnifunc|opendevice|operatorfunc|opfunc|osfiletype|pa|para|paragraphs|paste|pastetoggle|patchexpr|patchmode|path|pdev|penc|pex|pexpr|pfn|ph|pheader|pi|pm|pmbcs|pmbfn|popt|preserveindent|previewheight|previewwindow|printdevice|printencoding|printexpr|printfont|printheader|printmbcharset|printmbfont|printoptions|prompt|pt|pumheight|pvh|pvw|qe|quoteescape|readonly|remap|report|restorescreen|revins|rightleft|rightleftcmd|rl|rlc|ro|rs|rtp|ruf|ruler|rulerformat|runtimepath|sbo|sc|scb|scr|scroll|scrollbind|scrolljump|scrolloff|scrollopt|scs|sect|sections|secure|sel|selection|selectmode|sessionoptions|sft|shcf|shellcmdflag|shellpipe|shellquote|shellredir|shellslash|shelltemp|shelltype|shellxquote|shiftround|shiftwidth|shm|shortmess|shortname|showbreak|showcmd|showfulltag|showmatch|showmode|showtabline|shq|si|sidescroll|sidescrolloff|siso|sj|slm|smartcase|smartindent|smarttab|smc|smd|softtabstop|sol|spc|spell|spellcapcheck|spellfile|spelllang|spellsuggest|spf|spl|splitbelow|splitright|sps|sr|srr|ss|ssl|ssop|stal|startofline|statusline|stl|stmp|su|sua|suffixes|suffixesadd|sw|swapfile|swapsync|swb|swf|switchbuf|sws|sxq|syn|synmaxcol|syntax|tabline|tabpagemax|tabstop|tagbsearch|taglength|tagrelative|tagstack|tal|tb|tbi|tbidi|tbis|tbs|tenc|term|termbidi|termencoding|terse|textauto|textmode|textwidth|tgst|thesaurus|tildeop|timeout|timeoutlen|title|titlelen|titleold|titlestring|toolbar|toolbariconsize|top|tpm|tsl|tsr|ttimeout|ttimeoutlen|ttm|tty|ttybuiltin|ttyfast|ttym|ttymouse|ttyscroll|ttytype|tw|tx|uc|ul|undolevels|updatecount|updatetime|ut|vb|vbs|vdir|verbosefile|vfile|viewdir|viewoptions|viminfo|virtualedit|visualbell|vop|wak|warn|wb|wc|wcm|wd|weirdinvert|wfh|wfw|whichwrap|wi|wig|wildchar|wildcharm|wildignore|wildmenu|wildmode|wildoptions|wim|winaltkeys|window|winfixheight|winfixwidth|winheight|winminheight|winminwidth|winwidth|wiv|wiw|wm|wmh|wmnu|wmw|wop|wrap|wrapmargin|wrapscan|writeany|writebackup|writedelay|ww|noacd|noai|noakm|noallowrevins|noaltkeymap|noanti|noantialias|noar|noarab|noarabic|noarabicshape|noari|noarshape|noautochdir|noautoindent|noautoread|noautowrite|noautowriteall|noaw|noawa|nobackup|noballooneval|nobeval|nobin|nobinary|nobiosk|nobioskey|nobk|nobl|nobomb|nobuflisted|nocf|noci|nocin|nocindent|nocompatible|noconfirm|noconsk|noconskey|nocopyindent|nocp|nocscopetag|nocscopeverbose|nocst|nocsverb|nocuc|nocul|nocursorcolumn|nocursorline|nodeco|nodelcombine|nodg|nodiff|nodigraph|nodisable|noea|noeb|noed|noedcompatible|noek|noendofline|noeol|noequalalways|noerrorbells|noesckeys|noet|noex|noexpandtab|noexrc|nofen|nofk|nofkmap|nofoldenable|nogd|nogdefault|noguipty|nohid|nohidden|nohk|nohkmap|nohkmapp|nohkp|nohls|noic|noicon|noignorecase|noim|noimc|noimcmdline|noimd|noincsearch|noinf|noinfercase|noinsertmode|nois|nojoinspaces|nojs|nolazyredraw|nolbr|nolinebreak|nolisp|nolist|noloadplugins|nolpl|nolz|noma|nomacatsui|nomagic|nomh|noml|nomod|nomodeline|nomodifiable|nomodified|nomore|nomousef|nomousefocus|nomousehide|nonu|nonumber|noodev|noopendevice|nopaste|nopi|nopreserveindent|nopreviewwindow|noprompt|nopvw|noreadonly|noremap|norestorescreen|norevins|nori|norightleft|norightleftcmd|norl|norlc|noro|nors|noru|noruler|nosb|nosc|noscb|noscrollbind|noscs|nosecure|nosft|noshellslash|noshelltemp|noshiftround|noshortname|noshowcmd|noshowfulltag|noshowmatch|noshowmode|nosi|nosm|nosmartcase|nosmartindent|nosmarttab|nosmd|nosn|nosol|nospell|nosplitbelow|nosplitright|nospr|nosr|nossl|nosta|nostartofline|nostmp|noswapfile|noswf|nota|notagbsearch|notagrelative|notagstack|notbi|notbidi|notbs|notermbidi|noterse|notextauto|notextmode|notf|notgst|notildeop|notimeout|notitle|noto|notop|notr|nottimeout|nottybuiltin|nottyfast|notx|novb|novisualbell|nowa|nowarn|nowb|noweirdinvert|nowfh|nowfw|nowildmenu|nowinfixheight|nowinfixwidth|nowiv|nowmnu|nowrap|nowrapscan|nowrite|nowriteany|nowritebackup|nows|invacd|invai|invakm|invallowrevins|invaltkeymap|invanti|invantialias|invar|invarab|invarabic|invarabicshape|invari|invarshape|invautochdir|invautoindent|invautoread|invautowrite|invautowriteall|invaw|invawa|invbackup|invballooneval|invbeval|invbin|invbinary|invbiosk|invbioskey|invbk|invbl|invbomb|invbuflisted|invcf|invci|invcin|invcindent|invcompatible|invconfirm|invconsk|invconskey|invcopyindent|invcp|invcscopetag|invcscopeverbose|invcst|invcsverb|invcuc|invcul|invcursorcolumn|invcursorline|invdeco|invdelcombine|invdg|invdiff|invdigraph|invdisable|invea|inveb|inved|invedcompatible|invek|invendofline|inveol|invequalalways|inverrorbells|invesckeys|invet|invex|invexpandtab|invexrc|invfen|invfk|invfkmap|invfoldenable|invgd|invgdefault|invguipty|invhid|invhidden|invhk|invhkmap|invhkmapp|invhkp|invhls|invhlsearch|invic|invicon|invignorecase|invim|invimc|invimcmdline|invimd|invincsearch|invinf|invinfercase|invinsertmode|invis|invjoinspaces|invjs|invlazyredraw|invlbr|invlinebreak|invlisp|invlist|invloadplugins|invlpl|invlz|invma|invmacatsui|invmagic|invmh|invml|invmod|invmodeline|invmodifiable|invmodified|invmore|invmousef|invmousefocus|invmousehide|invnu|invnumber|invodev|invopendevice|invpaste|invpi|invpreserveindent|invpreviewwindow|invprompt|invpvw|invreadonly|invremap|invrestorescreen|invrevins|invri|invrightleft|invrightleftcmd|invrl|invrlc|invro|invrs|invru|invruler|invsb|invsc|invscb|invscrollbind|invscs|invsecure|invsft|invshellslash|invshelltemp|invshiftround|invshortname|invshowcmd|invshowfulltag|invshowmatch|invshowmode|invsi|invsm|invsmartcase|invsmartindent|invsmarttab|invsmd|invsn|invsol|invspell|invsplitbelow|invsplitright|invspr|invsr|invssl|invsta|invstartofline|invstmp|invswapfile|invswf|invta|invtagbsearch|invtagrelative|invtagstack|invtbi|invtbidi|invtbs|invtermbidi|invterse|invtextauto|invtextmode|invtf|invtgst|invtildeop|invtimeout|invtitle|invto|invtop|invtr|invttimeout|invttybuiltin|invttyfast|invtx|invvb|invvisualbell|invwa|invwarn|invwb|invweirdinvert|invwfh|invwfw|invwildmenu|invwinfixheight|invwinfixwidth|invwiv|invwmnu|invwrap|invwrapscan|invwrite|invwriteany|invwritebackup|invws|t_AB|t_AF|t_al|t_AL|t_bc|t_cd|t_ce|t_Ce|t_cl|t_cm|t_Co|t_cs|t_Cs|t_CS|t_CV|t_da|t_db|t_dl|t_DL|t_EI|t_F1|t_F2|t_F3|t_F4|t_F5|t_F6|t_F7|t_F8|t_F9|t_fs|t_IE|t_IS|t_k1|t_K1|t_k2|t_k3|t_K3|t_k4|t_K4|t_k5|t_K5|t_k6|t_K6|t_k7|t_K7|t_k8|t_K8|t_k9|t_K9|t_KA|t_kb|t_kB|t_KB|t_KC|t_kd|t_kD|t_KD|t_ke|t_KE|t_KF|t_KG|t_kh|t_KH|t_kI|t_KI|t_KJ|t_KK|t_kl|t_KL|t_kN|t_kP|t_kr|t_ks|t_ku|t_le|t_mb|t_md|t_me|t_mr|t_ms|t_nd|t_op|t_RI|t_RV|t_Sb|t_se|t_Sf|t_SI|t_so|t_sr|t_te|t_ti|t_ts|t_ue|t_us|t_ut|t_vb|t_ve|t_vi|t_vs|t_WP|t_WS|t_xs|t_ZH|t_ZR)\\b/,number:/\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?)\\b/i,operator:/\\|\\||&&|[-+.]=?|[=!](?:[=~][#?]?)?|[<>]=?[#?]?|[*\\/%?]|\\b(?:is(?:not)?)\\b/,punctuation:/[{}[\\](),;:]/};\nPrism.languages.yaml={scalar:{pattern:/([\\-:]\\s*(?:![^\\s]+)?[ \\t]*[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)[^\\r\\n]+(?:\\2[^\\r\\n]+)*)/,lookbehind:!0,alias:\"string\"},comment:/#.*/,key:{pattern:/(\\s*(?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:![^\\s]+)?[ \\t]*)[^\\r\\n{[\\]},#\\s]+?(?=\\s*:\\s)/,lookbehind:!0,alias:\"atrule\"},directive:{pattern:/(^[ \\t]*)%.+/m,lookbehind:!0,alias:\"important\"},datetime:{pattern:/([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?)?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?)(?=[ \\t]*(?:$|,|]|}))/m,lookbehind:!0,alias:\"number\"},\"boolean\":{pattern:/([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:true|false)[ \\t]*(?=$|,|]|})/im,lookbehind:!0,alias:\"important\"},\"null\":{pattern:/([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:null|~)[ \\t]*(?=$|,|]|})/im,lookbehind:!0,alias:\"important\"},string:{pattern:/([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(\"|')(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2(?=[ \\t]*(?:$|,|]|}))/m,lookbehind:!0,greedy:!0},number:{pattern:/([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)[+\\-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+\\.?\\d*|\\.?\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)[ \\t]*(?=$|,|]|})/im,lookbehind:!0},tag:/![^\\s]+/,important:/[&*][\\w]+/,punctuation:/---|[:[\\]{}\\-,|>?]|\\.\\.\\./};\n!function(){function e(e,t){return Array.prototype.slice.call((t||document).querySelectorAll(e))}function t(e,t){return t=\" \"+t+\" \",(\" \"+e.className+\" \").replace(/[\\n\\t]/g,\" \").indexOf(t)>-1}function n(e,n,i){n=\"string\"==typeof n?n:e.getAttribute(\"data-line\");for(var o,l=n.replace(/\\s+/g,\"\").split(\",\"),a=+e.getAttribute(\"data-line-offset\")||0,s=r()?parseInt:parseFloat,d=s(getComputedStyle(e).lineHeight),u=t(e,\"line-numbers\"),c=0;o=l[c++];){var p=o.split(\"-\"),m=+p[0],f=+p[1]||m,h=e.querySelector('.line-highlight[data-range=\"'+o+'\"]')||document.createElement(\"div\");if(h.setAttribute(\"aria-hidden\",\"true\"),h.setAttribute(\"data-range\",o),h.className=(i||\"\")+\" line-highlight\",u&&Prism.plugins.lineNumbers){var g=Prism.plugins.lineNumbers.getLine(e,m),y=Prism.plugins.lineNumbers.getLine(e,f);g&&(h.style.top=g.offsetTop+\"px\"),y&&(h.style.height=y.offsetTop-g.offsetTop+y.offsetHeight+\"px\")}else h.setAttribute(\"data-start\",m),f>m&&h.setAttribute(\"data-end\",f),h.style.top=(m-a-1)*d+\"px\",h.textContent=new Array(f-m+2).join(\" \\n\");u?e.appendChild(h):(e.querySelector(\"code\")||e).appendChild(h)}}function i(){var t=location.hash.slice(1);e(\".temporary.line-highlight\").forEach(function(e){e.parentNode.removeChild(e)});var i=(t.match(/\\.([\\d,-]+)$/)||[,\"\"])[1];if(i&&!document.getElementById(t)){var r=t.slice(0,t.lastIndexOf(\".\")),o=document.getElementById(r);o&&(o.hasAttribute(\"data-line\")||o.setAttribute(\"data-line\",\"\"),n(o,i,\"temporary \"),document.querySelector(\".temporary.line-highlight\").scrollIntoView())}}if(\"undefined\"!=typeof self&&self.Prism&&self.document&&document.querySelector){var r=function(){var e;return function(){if(\"undefined\"==typeof e){var t=document.createElement(\"div\");t.style.fontSize=\"13px\",t.style.lineHeight=\"1.5\",t.style.padding=0,t.style.border=0,t.innerHTML=\"&nbsp;<br />&nbsp;\",document.body.appendChild(t),e=38===t.offsetHeight,document.body.removeChild(t)}return e}}(),o=0;Prism.hooks.add(\"before-sanity-check\",function(t){var n=t.element.parentNode,i=n&&n.getAttribute(\"data-line\");if(n&&i&&/pre/i.test(n.nodeName)){var r=0;e(\".line-highlight\",n).forEach(function(e){r+=e.textContent.length,e.parentNode.removeChild(e)}),r&&/^( \\n)+$/.test(t.code.slice(-r))&&(t.code=t.code.slice(0,-r))}}),Prism.hooks.add(\"complete\",function l(e){var r=e.element.parentNode,a=r&&r.getAttribute(\"data-line\");if(r&&a&&/pre/i.test(r.nodeName)){clearTimeout(o);var s=Prism.plugins.lineNumbers,d=e.plugins&&e.plugins.lineNumbers;t(r,\"line-numbers\")&&s&&!d?Prism.hooks.add(\"line-numbers\",l):(n(r,a),o=setTimeout(i,1))}}),window.addEventListener(\"hashchange\",i),window.addEventListener(\"resize\",function(){var e=document.querySelectorAll(\"pre[data-line]\");Array.prototype.forEach.call(e,function(e){n(e)})})}}();\n!function(){if(\"undefined\"!=typeof self&&self.Prism&&self.document){var e=\"line-numbers\",t=/\\n(?!$)/g,n=function(e){var n=r(e),s=n[\"white-space\"];if(\"pre-wrap\"===s||\"pre-line\"===s){var l=e.querySelector(\"code\"),i=e.querySelector(\".line-numbers-rows\"),a=e.querySelector(\".line-numbers-sizer\"),o=l.textContent.split(t);a||(a=document.createElement(\"span\"),a.className=\"line-numbers-sizer\",l.appendChild(a)),a.style.display=\"block\",o.forEach(function(e,t){a.textContent=e||\"\\n\";var n=a.getBoundingClientRect().height;i.children[t].style.height=n+\"px\"}),a.textContent=\"\",a.style.display=\"none\"}},r=function(e){return e?window.getComputedStyle?getComputedStyle(e):e.currentStyle||null:null};window.addEventListener(\"resize\",function(){Array.prototype.forEach.call(document.querySelectorAll(\"pre.\"+e),n)}),Prism.hooks.add(\"complete\",function(e){if(e.code){var r=e.element.parentNode,s=/\\s*\\bline-numbers\\b\\s*/;if(r&&/pre/i.test(r.nodeName)&&(s.test(r.className)||s.test(e.element.className))&&!e.element.querySelector(\".line-numbers-rows\")){s.test(e.element.className)&&(e.element.className=e.element.className.replace(s,\" \")),s.test(r.className)||(r.className+=\" line-numbers\");var l,i=e.code.match(t),a=i?i.length+1:1,o=new Array(a+1);o=o.join(\"<span></span>\"),l=document.createElement(\"span\"),l.setAttribute(\"aria-hidden\",\"true\"),l.className=\"line-numbers-rows\",l.innerHTML=o,r.hasAttribute(\"data-start\")&&(r.style.counterReset=\"linenumber \"+(parseInt(r.getAttribute(\"data-start\"),10)-1)),e.element.appendChild(l),n(r),Prism.hooks.run(\"line-numbers\",e)}}}),Prism.hooks.add(\"line-numbers\",function(e){e.plugins=e.plugins||{},e.plugins.lineNumbers=!0}),Prism.plugins.lineNumbers={getLine:function(t,n){if(\"PRE\"===t.tagName&&t.classList.contains(e)){var r=t.querySelector(\".line-numbers-rows\"),s=parseInt(t.getAttribute(\"data-start\"),10)||1,l=s+(r.children.length-1);s>n&&(n=s),n>l&&(n=l);var i=n-s;return r.children[i]}}}}}();\n!function(){if((\"undefined\"==typeof self||self.Prism)&&(\"undefined\"==typeof global||global.Prism)){var i=/\\b([a-z]{3,7}:\\/\\/|tel:)[\\w\\-+%~\\/.:#=?&amp;]+/,n=/\\b\\S+@[\\w.]+[a-z]{2}/,e=/\\[([^\\]]+)]\\(([^)]+)\\)/,t=[\"comment\",\"url\",\"attr-value\",\"string\"];Prism.plugins.autolinker={processGrammar:function(a){a&&!a[\"url-link\"]&&(Prism.languages.DFS(a,function(a,r,l){t.indexOf(l)>-1&&\"Array\"!==Prism.util.type(r)&&(r.pattern||(r=this[a]={pattern:r}),r.inside=r.inside||{},\"comment\"==l&&(r.inside[\"md-link\"]=e),\"attr-value\"==l?Prism.languages.insertBefore(\"inside\",\"punctuation\",{\"url-link\":i},r):r.inside[\"url-link\"]=i,r.inside[\"email-link\"]=n)}),a[\"url-link\"]=i,a[\"email-link\"]=n)}},Prism.hooks.add(\"before-highlight\",function(i){Prism.plugins.autolinker.processGrammar(i.grammar)}),Prism.hooks.add(\"wrap\",function(i){if(/-link$/.test(i.type)){i.tag=\"a\";var n=i.content;if(\"email-link\"==i.type&&0!=n.indexOf(\"mailto:\"))n=\"mailto:\"+n;else if(\"md-link\"==i.type){var t=i.content.match(e);n=t[2],i.content=t[1]}i.attributes.href=n}try{i.content=decodeURIComponent(i.content)}catch(a){}})}}();\n!function(){\"undefined\"!=typeof self&&self.Prism&&self.document&&Prism.hooks.add(\"complete\",function(e){if(e.code){var t=e.element.parentNode,a=/\\s*\\bcommand-line\\b\\s*/;if(t&&/pre/i.test(t.nodeName)&&(a.test(t.className)||a.test(e.element.className))&&!e.element.querySelector(\".command-line-prompt\")){a.test(e.element.className)&&(e.element.className=e.element.className.replace(a,\"\")),a.test(t.className)||(t.className+=\" command-line\");var n=function(e,a){return(t.getAttribute(e)||a).replace(/\"/g,\"&quot\")},s=new Array(1+e.code.split(\"\\n\").length),r=n(\"data-prompt\",\"\");if(\"\"!==r)s=s.join('<span data-prompt=\"'+r+'\"></span>');else{var l=n(\"data-user\",\"user\"),m=n(\"data-host\",\"localhost\");s=s.join('<span data-user=\"'+l+'\" data-host=\"'+m+'\"></span>')}var o=document.createElement(\"span\");o.className=\"command-line-prompt\",o.innerHTML=s;var i=t.getAttribute(\"data-output\")||\"\";i=i.split(\",\");for(var c=0;c<i.length;c++){var p=i[c].split(\"-\"),d=parseInt(p[0]),u=d;if(2===p.length&&(u=parseInt(p[1])),!isNaN(d)&&!isNaN(u))for(var f=d;u>=f&&f<=o.children.length;f++){var N=o.children[f-1];N.removeAttribute(\"data-user\"),N.removeAttribute(\"data-host\"),N.removeAttribute(\"data-prompt\")}}e.element.innerHTML=o.outerHTML+e.element.innerHTML}}})}();\n!function(){function e(e){this.defaults=r({},e)}function n(e){return e.replace(/-(\\w)/g,function(e,n){return n.toUpperCase()})}function t(e){for(var n=0,t=0;t<e.length;++t)e.charCodeAt(t)==\"\t\".charCodeAt(0)&&(n+=3);return e.length+n}var r=Object.assign||function(e,n){for(var t in n)n.hasOwnProperty(t)&&(e[t]=n[t]);return e};e.prototype={setDefaults:function(e){this.defaults=r(this.defaults,e)},normalize:function(e,t){t=r(this.defaults,t);for(var i in t){var o=n(i);\"normalize\"!==i&&\"setDefaults\"!==o&&t[i]&&this[o]&&(e=this[o].call(this,e,t[i]))}return e},leftTrim:function(e){return e.replace(/^\\s+/,\"\")},rightTrim:function(e){return e.replace(/\\s+$/,\"\")},tabsToSpaces:function(e,n){return n=0|n||4,e.replace(/\\t/g,new Array(++n).join(\" \"))},spacesToTabs:function(e,n){return n=0|n||4,e.replace(new RegExp(\" {\"+n+\"}\",\"g\"),\"\t\")},removeTrailing:function(e){return e.replace(/\\s*?$/gm,\"\")},removeInitialLineFeed:function(e){return e.replace(/^(?:\\r?\\n|\\r)/,\"\")},removeIndent:function(e){var n=e.match(/^[^\\S\\n\\r]*(?=\\S)/gm);return n&&n[0].length?(n.sort(function(e,n){return e.length-n.length}),n[0].length?e.replace(new RegExp(\"^\"+n[0],\"gm\"),\"\"):e):e},indent:function(e,n){return e.replace(/^[^\\S\\n\\r]*(?=\\S)/gm,new Array(++n).join(\"\t\")+\"$&\")},breakLines:function(e,n){n=n===!0?80:0|n||80;for(var r=e.split(\"\\n\"),i=0;i<r.length;++i)if(!(t(r[i])<=n)){for(var o=r[i].split(/(\\s+)/g),a=0,s=0;s<o.length;++s){var l=t(o[s]);a+=l,a>n&&(o[s]=\"\\n\"+o[s],a=l)}r[i]=o.join(\"\")}return r.join(\"\\n\")}},\"undefined\"!=typeof module&&module.exports&&(module.exports=e),\"undefined\"!=typeof Prism&&(Prism.plugins.NormalizeWhitespace=new e({\"remove-trailing\":!0,\"remove-indent\":!0,\"left-trim\":!0,\"right-trim\":!0}),Prism.hooks.add(\"before-sanity-check\",function(e){var n=Prism.plugins.NormalizeWhitespace;if(!e.settings||e.settings[\"whitespace-normalization\"]!==!1){if((!e.element||!e.element.parentNode)&&e.code)return e.code=n.normalize(e.code,e.settings),void 0;var t=e.element.parentNode,r=/\\bno-whitespace-normalization\\b/;if(e.code&&t&&\"pre\"===t.nodeName.toLowerCase()&&!r.test(t.className)&&!r.test(e.element.className)){for(var i=t.childNodes,o=\"\",a=\"\",s=!1,l=0;l<i.length;++l){var c=i[l];c==e.element?s=!0:\"#text\"===c.nodeName&&(s?a+=c.nodeValue:o+=c.nodeValue,t.removeChild(c),--l)}if(e.element.children.length&&Prism.plugins.KeepMarkup){var u=o+e.element.innerHTML+a;e.element.innerHTML=n.normalize(u,e.settings),e.code=e.element.textContent}else e.code=o+e.code+a,e.code=n.normalize(e.code,e.settings)}}}))}();\n\n","/* eslint-env browser */\n\n/**\n * Nav/Title replacement\n * Used on invividual post pages, displays the post title in place of the nav\n * bar when scrolling past the title\n *\n * Usage:\n * ```\n * Casper.stickyTitle({\n *     navSelector: '.site-nav-main',\n *     titleSelector: '.post-full-title',\n *     activeClass: 'nav-post-title-active'\n * });\n * ```\n */\n\n(function (window, document) {\n    // set up Casper as a global object\n    if (!window.Casper) {\n        window.Casper = {};\n    }\n\n    window.Casper.stickyNavTitle = function stickyNavTitle(options) {\n        var nav = document.querySelector(options.navSelector);\n        var title = document.querySelector(options.titleSelector);\n\n        var lastScrollY = window.scrollY;\n        var ticking = false;\n\n        function onScroll() {\n            lastScrollY = window.scrollY;\n            requestTick();\n        }\n\n        function requestTick() {\n            if (!ticking) {\n                requestAnimationFrame(update);\n            }\n            ticking = true;\n        }\n\n        function update() {\n            var trigger = title.getBoundingClientRect().top + window.scrollY;\n            var triggerOffset = title.offsetHeight + 35;\n\n            // show/hide post title\n            if (lastScrollY >= trigger + triggerOffset) {\n                nav.classList.add(options.activeClass);\n            } else {\n                nav.classList.remove(options.activeClass);\n            }\n\n            ticking = false;\n        }\n\n        window.addEventListener('scroll', onScroll, {passive: true});\n\n        update();\n    };\n})(window, document);\n"]}